<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="12:BootLedsAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x408456b8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x405f3e70"/></to>
    </wire>
    <wire loc="51:../../tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x405f3e70"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x405f1da0"/></to>
    </wire>
    <wire loc="13:BootLedsAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x40843340"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x408359b8"/></to>
    </wire>
    <wire loc="72:../../tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x408359b8"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x40834a70"/></to>
    </wire>
    <wire loc="14:BootLedsAppC.nc">
      <from><interface-ref name="LigarTimerA" scoped="" ref="0x408552a0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4084ccd8"/></to>
    </wire>
    <wire loc="52:../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x4084ccd8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40861cc8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:BootLedsAppC.nc">
      <from><interface-ref name="LigarTimerB" scoped="" ref="0x40841610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40946c00"/></to>
    </wire>
    <wire loc="52:../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40946c00"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40861cc8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="16:BootLedsAppC.nc">
      <from><interface-ref name="LigarTimerC" scoped="" ref="0x40852968"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40943ab8"/></to>
    </wire>
    <wire loc="52:../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40943ab8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40861cc8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:../../tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40610a38"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x405f1a58"/></to>
    </wire>
    <wire loc="54:../../tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x405fdc80"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x405e7c28"/></to>
    </wire>
    <wire loc="58:../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x405e7c28"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x408301f0"/></to>
    </wire>
    <wire loc="55:../../tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x405ef740"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x40611680"/></to>
    </wire>
    <wire loc="61:../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x40611680"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x4083f990"/></to>
    </wire>
    <wire loc="56:../../tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x40600200"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x406100b0"/></to>
    </wire>
    <wire loc="64:../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x406100b0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x4083c1a8"/></to>
    </wire>
    <wire loc="56:../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x40707e58"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40610a38"/></to>
    </wire>
    <wire loc="59:../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x40830b68"/></from>
      <to><interface-ref name="Port54" scoped="" ref="0x40639bc8"/></to>
    </wire>
    <wire loc="486:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x40639bc8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406d35c8"/></to>
    </wire>
    <wire loc="62:../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x4083e350"/></from>
      <to><interface-ref name="Port55" scoped="" ref="0x40638d88"/></to>
    </wire>
    <wire loc="487:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x40638d88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406e6d68"/></to>
    </wire>
    <wire loc="65:../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x4083cb20"/></from>
      <to><interface-ref name="Port56" scoped="" ref="0x40648010"/></to>
    </wire>
    <wire loc="488:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x40648010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406e35c8"/></to>
    </wire>
    <wire loc="442:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x40615368"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406865c8"/></to>
    </wire>
    <wire loc="455:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x4061c4c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406a85c8"/></to>
    </wire>
    <wire loc="531:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x4064d668"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406a1d68"/></to>
    </wire>
    <wire loc="551:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x4065d3d8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406fa5c8"/></to>
    </wire>
    <wire loc="532:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x4064c840"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406b25c8"/></to>
    </wire>
    <wire loc="460:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x4062c848"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406a35c8"/></to>
    </wire>
    <wire loc="473:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x40633ae8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406c55c8"/></to>
    </wire>
    <wire loc="497:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x40642a08"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406ea5c8"/></to>
    </wire>
    <wire loc="535:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x40649d80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406ac5c8"/></to>
    </wire>
    <wire loc="545:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x40652ad8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406de5c8"/></to>
    </wire>
    <wire loc="557:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x4066dae0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406f8d68"/></to>
    </wire>
    <wire loc="445:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x40624848"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40692d68"/></to>
    </wire>
    <wire loc="536:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x40659010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406bed68"/></to>
    </wire>
    <wire loc="450:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x40622bc8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4068dd68"/></to>
    </wire>
    <wire loc="463:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x40629d88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406afd68"/></to>
    </wire>
    <wire loc="476:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x4062e010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406d2d68"/></to>
    </wire>
    <wire loc="489:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x40647178"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406e1d68"/></to>
    </wire>
    <wire loc="500:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x40650010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406f8d68"/></to>
    </wire>
    <wire loc="440:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x40617010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4068b5c8"/></to>
    </wire>
    <wire loc="453:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x4061e178"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406996f8"/></to>
    </wire>
    <wire loc="466:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x40625368"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406bb5c8"/></to>
    </wire>
    <wire loc="530:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x4064e4c0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406a1d68"/></to>
    </wire>
    <wire loc="548:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x40660010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406edd68"/></to>
    </wire>
    <wire loc="555:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x4066e918"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406f8d68"/></to>
    </wire>
    <wire loc="541:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x406555a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406d6d68"/></to>
    </wire>
    <wire loc="471:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x40635688"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406b66f8"/></to>
    </wire>
    <wire loc="484:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x4063b848"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406d85c8"/></to>
    </wire>
    <wire loc="495:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x40644688"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406ef5c8"/></to>
    </wire>
    <wire loc="549:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x4065f168"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406ea5c8"/></to>
    </wire>
    <wire loc="538:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x40658168"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406c95c8"/></to>
    </wire>
    <wire loc="443:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x406144c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40684d68"/></to>
    </wire>
    <wire loc="456:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x4062d688"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406a6d68"/></to>
    </wire>
    <wire loc="493:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x40646368"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406de5c8"/></to>
    </wire>
    <wire loc="461:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x4062ba08"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406a1d68"/></to>
    </wire>
    <wire loc="474:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x40631ca8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406c3d68"/></to>
    </wire>
    <wire loc="498:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x40641bc8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406fdd68"/></to>
    </wire>
    <wire loc="540:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x406563e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406d85c8"/></to>
    </wire>
    <wire loc="438:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x40618ce8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406695d8"/></to>
    </wire>
    <wire loc="451:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x40621d88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4069e5c8"/></to>
    </wire>
    <wire loc="464:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x40627010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406ac5c8"/></to>
    </wire>
    <wire loc="477:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x4063f178"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406cf5c8"/></to>
    </wire>
    <wire loc="542:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x40654760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406bb5c8"/></to>
    </wire>
    <wire loc="546:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x40664c98"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406f2d68"/></to>
    </wire>
    <wire loc="552:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x4065c598"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406f8d68"/></to>
    </wire>
    <wire loc="482:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x4063d4c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406c95c8"/></to>
    </wire>
    <wire loc="543:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x40653920"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406b9d68"/></to>
    </wire>
    <wire loc="441:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x40616178"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40689d68"/></to>
    </wire>
    <wire loc="454:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x4061d368"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40697df8"/></to>
    </wire>
    <wire loc="467:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x406364c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406b9d68"/></to>
    </wire>
    <wire loc="539:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x40657288"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406dbd68"/></to>
    </wire>
    <wire loc="550:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x4065e280"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406fdd68"/></to>
    </wire>
    <wire loc="472:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x40634928"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406c8df8"/></to>
    </wire>
    <wire loc="485:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x4063aa08"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406d6d68"/></to>
    </wire>
    <wire loc="496:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x40643848"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406edd68"/></to>
    </wire>
    <wire loc="444:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x40613688"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406945c8"/></to>
    </wire>
    <wire loc="494:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x406454c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406f2d68"/></to>
    </wire>
    <wire loc="449:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x40623a08"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4068f5c8"/></to>
    </wire>
    <wire loc="462:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x4062abc8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406b25c8"/></to>
    </wire>
    <wire loc="475:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x40630e68"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406c05c8"/></to>
    </wire>
    <wire loc="499:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x40640d88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406fa5c8"/></to>
    </wire>
    <wire loc="439:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x4060ce68"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4067ad68"/></to>
    </wire>
    <wire loc="452:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x4061f010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4069cd68"/></to>
    </wire>
    <wire loc="465:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x40626178"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406bed68"/></to>
    </wire>
    <wire loc="478:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x4063e368"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406cdd68"/></to>
    </wire>
    <wire loc="534:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x4064aba8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406afd68"/></to>
    </wire>
    <wire loc="547:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x40663e58"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406ef5c8"/></to>
    </wire>
    <wire loc="533:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x4064ba00"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406afd68"/></to>
    </wire>
    <wire loc="483:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x4063c688"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406dbd68"/></to>
    </wire>
    <wire loc="554:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x4065b758"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406fa5c8"/></to>
    </wire>
    <wire loc="558:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x4066cca8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406e1d68"/></to>
    </wire>
    <wire loc="529:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x4064f168"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406a35c8"/></to>
    </wire>
    <wire loc="48:../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x406f68a8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40707288"/></to>
    </wire>
    <wire loc="49:../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x40707698"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x407083d8"/></to>
    </wire>
    <wire loc="46:../../tos/platforms/telosb/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x407083d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40708c28"/></to>
    </wire>
    <wire loc="50:../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x40707a78"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x406f37d8"/></to>
    </wire>
    <wire loc="46:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40708c28"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40727220"/></to>
    </wire>
    <wire loc="47:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x4071a310"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x407275f0"/></to>
    </wire>
    <wire loc="48:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x405e38a8"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x40726010"/></to>
    </wire>
    <wire loc="113:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x40746010"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x407ab120"/></to>
    </wire>
    <wire loc="126:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x40753ba8"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x407bf010"/></to>
    </wire>
    <wire loc="108:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x40750d28"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x407ae430"/></to>
    </wire>
    <wire loc="149:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x4075b168"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x407cacc8"/></to>
    </wire>
    <wire loc="107:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x40754ee8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x407afc78"/></to>
    </wire>
    <wire loc="148:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x4075f5f8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x407ca5f0"/></to>
    </wire>
    <wire loc="170:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x4075abf8"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x407d5a28"/></to>
    </wire>
    <wire loc="154:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x4074cb80"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x407c7a10"/></to>
    </wire>
    <wire loc="99:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x40743830"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x4077b3e0"/></to>
    </wire>
    <wire loc="135:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x4075c010"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x407b9010"/></to>
    </wire>
    <wire loc="134:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x407605f8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x407ba8d0"/></to>
    </wire>
    <wire loc="133:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x4074e7e8"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x407bce68"/></to>
    </wire>
    <wire loc="115:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x407415f8"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x407aa270"/></to>
    </wire>
    <wire loc="156:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x4075ba08"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x407c6be8"/></to>
    </wire>
    <wire loc="140:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x4074d468"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x407b7ca8"/></to>
    </wire>
    <wire loc="114:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x407426c8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x407abb78"/></to>
    </wire>
    <wire loc="93:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x40748bb0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x407569c0"/></to>
    </wire>
    <wire loc="155:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x4075fdb8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x407c6510"/></to>
    </wire>
    <wire loc="106:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x40735468"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x407af220"/></to>
    </wire>
    <wire loc="161:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x4074b708"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x407c28f8"/></to>
    </wire>
    <wire loc="101:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x40750488"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x4077a550"/></to>
    </wire>
    <wire loc="142:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x4075c8b0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x407b6e88"/></to>
    </wire>
    <wire loc="100:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x40754728"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x4077be38"/></to>
    </wire>
    <wire loc="141:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x40760db8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x407b67b0"/></to>
    </wire>
    <wire loc="163:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x4075a358"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x407d9b08"/></to>
    </wire>
    <wire loc="147:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x4074c010"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x407cbaf0"/></to>
    </wire>
    <wire loc="120:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x40741e60"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4077e3d8"/></to>
    </wire>
    <wire loc="162:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x4075e5f8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x407d9430"/></to>
    </wire>
    <wire loc="128:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x4075d6a8"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x407be190"/></to>
    </wire>
    <wire loc="169:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x4075edb8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x407d5350"/></to>
    </wire>
    <wire loc="127:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x40761de8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x407bfa68"/></to>
    </wire>
    <wire loc="168:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x407612a8"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x407d6870"/></to>
    </wire>
    <wire loc="94:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x407819f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x40781688"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x40781d48"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x407d03e8"/></to>
    </wire>
    <wire loc="96:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x407800b8"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x407d0870"/></to>
    </wire>
    <wire loc="102:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x4077ad08"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x407569c0"/></to>
    </wire>
    <wire loc="103:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x407b1970"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x40781688"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x407aebe8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x407569c0"/></to>
    </wire>
    <wire loc="110:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x407ad890"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x40781688"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x407aaa28"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x407569c0"/></to>
    </wire>
    <wire loc="117:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x407c16d0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x40781688"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x4077d410"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x4077d0a8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x4077d768"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x407d0cf8"/></to>
    </wire>
    <wire loc="123:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x4077dac0"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x407cf1b0"/></to>
    </wire>
    <wire loc="129:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x407be948"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4077e3d8"/></to>
    </wire>
    <wire loc="130:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x407bd5f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x4077d0a8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x407b97c8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4077e3d8"/></to>
    </wire>
    <wire loc="137:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x407b8430"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x4077d0a8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x407cd650"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4077e3d8"/></to>
    </wire>
    <wire loc="144:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x407cc278"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x4077d0a8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x407c9510"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4077e3d8"/></to>
    </wire>
    <wire loc="151:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x407c8190"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x4077d0a8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x407c5430"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4077e3d8"/></to>
    </wire>
    <wire loc="158:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x407c3080"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x4077d0a8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x407d8350"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4077e3d8"/></to>
    </wire>
    <wire loc="165:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x407d7010"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x4077d0a8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x407d4270"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4077e3d8"/></to>
    </wire>
    <wire loc="172:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x407d4e88"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x4077d0a8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40835dc0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4085b598"/></to>
    </wire>
    <wire loc="67:../../tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x40834e08"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x4035d5f0"/></to>
    </wire>
    <wire loc="53:../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x4035d5f0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x405c2cd0"/></to>
    </wire>
    <wire loc="68:../../tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x4084b400"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x406f68a8"/></to>
    </wire>
    <wire loc="71:../../tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4084b808"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x40835dc0"/></to>
    </wire>
    <wire loc="54:../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x4036ad58"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x405d1590"/></to>
    </wire>
    <wire loc="55:../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x405cc210"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x4035ea90"/></to>
    </wire>
    <wire loc="54:../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x40861cc8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x4085bd48"/></to>
    </wire>
    <wire loc="58:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x4085bd48"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40906f00"/></to>
    </wire>
    <wire loc="57:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x4085b598"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4086e010"/></to>
    </wire>
    <wire loc="59:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x40871da8"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40933940"/></to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x4086e010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40bca4f8"/></to>
    </wire>
    <wire loc="61:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x40938338"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40904cb0"/></to>
    </wire>
    <wire loc="62:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x4090a010"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x4086e468"/></to>
    </wire>
    <wire loc="53:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x4086e468"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40bf0358"/></to>
    </wire>
    <wire loc="63:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x4094f360"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x408b9088"/></to>
    </wire>
    <wire loc="50:../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x408b9088"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x408c3320"/></to>
    </wire>
    <wire loc="51:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40bca4f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40be5d30"/></to>
    </wire>
    <wire loc="55:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x40bec078"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40bca950"/></to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40bca950"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40be41d0"/></to>
    </wire>
    <wire loc="56:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40befe08"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x408b9088"/></to>
    </wire>
    <wire loc="54:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x40be3b38"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x40be71b0"/></to>
    </wire>
    <wire loc="49:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x40be71b0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x408798e8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x40be2790"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x40be7da8"/></to>
    </wire>
    <wire loc="50:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x40be7da8"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x40892890"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x40be1250"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x40be6870"/></to>
    </wire>
    <wire loc="51:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x40be6870"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x40890698"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x408798e8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x40741e60"/></to>
    </wire>
    <wire loc="59:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x40892890"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x40753ba8"/></to>
    </wire>
    <wire loc="60:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x40890698"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x40761de8"/></to>
    </wire>
    <wire loc="66:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x408798e8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x40741e60"/></to>
    </wire>
    <wire loc="67:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x40892890"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x4074d468"/></to>
    </wire>
    <wire loc="68:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x40890698"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x40760db8"/></to>
    </wire>
    <wire loc="70:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x408798e8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x40741e60"/></to>
    </wire>
    <wire loc="71:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x40892890"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x4074c010"/></to>
    </wire>
    <wire loc="72:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x40890698"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x4075f5f8"/></to>
    </wire>
    <wire loc="74:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x408798e8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x40741e60"/></to>
    </wire>
    <wire loc="75:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x40892890"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x4074cb80"/></to>
    </wire>
    <wire loc="76:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x40890698"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x4075fdb8"/></to>
    </wire>
    <wire loc="78:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x408798e8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x40741e60"/></to>
    </wire>
    <wire loc="79:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x40892890"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x4074b708"/></to>
    </wire>
    <wire loc="80:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x40890698"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x4075e5f8"/></to>
    </wire>
    <wire loc="82:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x408798e8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x40741e60"/></to>
    </wire>
    <wire loc="83:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x40892890"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x407612a8"/></to>
    </wire>
    <wire loc="84:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x40890698"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x4075edb8"/></to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x408c25f8"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x408b8c10"/></to>
    </wire>
    <wire loc="50:../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x408b8c10"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x408b1578"/></to>
    </wire>
    <wire loc="51:../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x408b0730"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x40741e60"/></to>
    </wire>
    <wire loc="74:../../tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x409099a8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4036ad58"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x40935560"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4036ad58"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
  </wiring>
  <components>
    <component qname="LedsC" loc="45:../../tos/system/LedsC.nc">
      <documentation loc="34:../../tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:../../tos/system/LedsP.nc" safe="">
      <documentation loc="35:../../tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="40:../../tos/platforms/telosa/PlatformLedsC.nc">
      <documentation loc="34:../../tos/platforms/telosa/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="45:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="35:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for general-purpose I/O.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="39(HplMsp430GeneralIOC.P10):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="39(HplMsp430GeneralIOC.P11):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="39(HplMsp430GeneralIOC.P12):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="39(HplMsp430GeneralIOC.P13):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="39(HplMsp430GeneralIOC.P14):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="39(HplMsp430GeneralIOC.P15):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="39(HplMsp430GeneralIOC.P16):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="39(HplMsp430GeneralIOC.P17):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="39(HplMsp430GeneralIOC.P20):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="39(HplMsp430GeneralIOC.P21):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="39(HplMsp430GeneralIOC.P22):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="39(HplMsp430GeneralIOC.P23):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="39(HplMsp430GeneralIOC.P24):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="39(HplMsp430GeneralIOC.P25):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="39(HplMsp430GeneralIOC.P26):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="39(HplMsp430GeneralIOC.P27):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="39(HplMsp430GeneralIOC.P30):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="39(HplMsp430GeneralIOC.P31):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="39(HplMsp430GeneralIOC.P32):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="39(HplMsp430GeneralIOC.P33):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="39(HplMsp430GeneralIOC.P34):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="39(HplMsp430GeneralIOC.P35):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="39(HplMsp430GeneralIOC.P36):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="39(HplMsp430GeneralIOC.P37):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="39(HplMsp430GeneralIOC.P40):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="39(HplMsp430GeneralIOC.P41):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="39(HplMsp430GeneralIOC.P42):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="39(HplMsp430GeneralIOC.P43):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="39(HplMsp430GeneralIOC.P44):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="39(HplMsp430GeneralIOC.P45):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="39(HplMsp430GeneralIOC.P46):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="39(HplMsp430GeneralIOC.P47):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="39(HplMsp430GeneralIOC.P50):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="39(HplMsp430GeneralIOC.P51):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="39(HplMsp430GeneralIOC.P52):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="39(HplMsp430GeneralIOC.P53):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="39(HplMsp430GeneralIOC.P54):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="39(HplMsp430GeneralIOC.P55):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="39(HplMsp430GeneralIOC.P56):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="39(HplMsp430GeneralIOC.P57):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="39(HplMsp430GeneralIOC.P60):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="39(HplMsp430GeneralIOC.P61):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="39(HplMsp430GeneralIOC.P62):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="39(HplMsp430GeneralIOC.P63):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="39(HplMsp430GeneralIOC.P64):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="39(HplMsp430GeneralIOC.P65):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="39(HplMsp430GeneralIOC.P66):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="39(HplMsp430GeneralIOC.P67):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PlatformC" loc="40:../../tos/platforms/telosa/PlatformC.nc">
      <documentation loc="34:../../tos/platforms/telosa/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:../../tos/platforms/telosa/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:../../tos/platforms/telosb/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:../../tos/platforms/telosb/MoteClockC.nc">
      <documentation loc="33:../../tos/platforms/telosb/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="43:../../tos/chips/msp430/timer/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="Msp430TimerC" loc="37:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="39(Msp430TimerC.Msp430TimerA):../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="39(Msp430TimerC.Msp430TimerB):../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="39(Msp430TimerC.Msp430TimerA0):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="39(Msp430TimerC.Msp430TimerA1):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="39(Msp430TimerC.Msp430TimerA2):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="39(Msp430TimerC.Msp430TimerB0):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="39(Msp430TimerC.Msp430TimerB1):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="39(Msp430TimerC.Msp430TimerB2):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="39(Msp430TimerC.Msp430TimerB3):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="39(Msp430TimerC.Msp430TimerB4):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="39(Msp430TimerC.Msp430TimerB5):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="39(Msp430TimerC.Msp430TimerB6):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:../../tos/chips/msp430/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:../../tos/chips/msp430/McuSleepC.nc" safe="">
      <documentation loc="33:../../tos/chips/msp430/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @date   October 26, 2005&#10; @see  Please refer to TEP 112 for more information about this component and its&#10;          intended use.&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MoteClockP" loc="38:../../tos/platforms/telosb/MoteClockP.nc">
      <documentation loc="33:../../tos/platforms/telosb/MoteClockP.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="MainC" loc="56:../../tos/system/MainC.nc">
      <documentation loc="45:../../tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RealMainP" loc="56:../../tos/system/RealMainP.nc" safe="">
      <documentation loc="49:../../tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:../../tos/system/TinySchedulerC.nc">
      <documentation loc="34:../../tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:../../tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="BootLedsC" loc="3:BootLedsC.nc">
      <module/>
    </component>
    <component qname="BootLedsAppC.LigarTimerA" loc="44(BootLedsAppC.LigarTimerA):../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:../../tos/system/TimerMilliP.nc">
      <documentation loc="34:../../tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="43:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="48:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <documentation loc="34:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x405e9e40"/>
            <typename><typedef-ref name="T32khz" ref="0x40845048"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x405e9e40"/>
            <typename><typedef-ref name="T32khz" ref="0x40845048"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x405e9a00"/>
            <typename><typedef-ref name="TMilli" ref="0x405e9bc8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x401eb250"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x405e9e40"/>
            <typename><typedef-ref name="T32khz" ref="0x40845048"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x401eb010"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x401eb250"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x405e9a00"/>
            <typename><typedef-ref name="TMilli" ref="0x405e9bc8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x401eb250"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x405e9e40"/>
            <typename><typedef-ref name="T32khz" ref="0x40845048"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x401eb010"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):../../tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x405e9a00"/>
            <typename><typedef-ref name="TMilli" ref="0x405e9bc8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):../../tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x405e9a00"/>
            <typename><typedef-ref name="TMilli" ref="0x405e9bc8"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x405e9a00"/>
            <typename><typedef-ref name="TMilli" ref="0x405e9bc8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BootLedsAppC.LigarTimerB" loc="44(BootLedsAppC.LigarTimerB):../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="BootLedsAppC.LigarTimerC" loc="44(BootLedsAppC.LigarTimerC):../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="39:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x4066ace0" loc="40:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x4066af10" loc="41:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x40667160" loc="42:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x40667390" loc="43:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x40667590" loc="44:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4003add8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerP" loc="39:../../tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x4076d7d0" loc="40:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x401eb010"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x4076da08" loc="41:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x401eb010"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x4076dc50" loc="42:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x401eb010"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x4076de68" loc="43:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x401eb010"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x4076c0c0" loc="44:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x401eb010"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x4076c2d0" loc="45:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x401eb010"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x4076c4f8" loc="46:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x401eb010"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x4076c720" loc="47:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x401eb010"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x4076c990" loc="48:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4035ae80"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="39:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x4077cca8" loc="40:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x401eb010"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x4077cf08" loc="41:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x401eb010"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:../../tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:../../tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmMilli32C" loc="41:../../tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:../../tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430AlarmC" loc="43:../../tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x4089fd40" loc="43:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x4089fd40"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:../../tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x408b2738" loc="42:../../tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x408b2738"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:../../tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x408b5900" loc="55:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x408b5900"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x408b5d60" loc="56:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x408b5d60"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x408c1010" loc="57:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x408c1010"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x408c1480" loc="58:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x408c1480"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x408c16e8" loc="59:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4003add8"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x408c1b70" loc="60:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x408c1b70"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:../../tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x408bc570" loc="52:../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x408bc570"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x408bc9d0" loc="53:../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x408bc9d0"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x408bcc38" loc="54:../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x408bcc38"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x408e70d8" loc="55:../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x408e70d8"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x408e7340" loc="56:../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4003add8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:../../tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40905910" loc="46:../../tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40905910"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:../../tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40922010" loc="46:../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40922010"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x409221f0" loc="46:../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:../../tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x409348e0" loc="46:../../tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x409348e0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="1" name="Leds" ref="0x405f3e70" loc="46:../../tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x405f3e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x405e8070"/>
        <function-ref name="led0Toggle" scoped="" ref="0x405e8150"/>
        <function-ref name="led1On" scoped="" ref="0x405e8230"/>
        <function-ref name="led1Toggle" scoped="" ref="0x405e8310"/>
        <function-ref name="led2Toggle" scoped="" ref="0x405e83f0"/>
        <function-ref name="get" scoped="" ref="0x405e84d0"/>
        <function-ref name="led1Off" scoped="" ref="0x405e85b0"/>
        <function-ref name="led2Off" scoped="" ref="0x405e8930"/>
        <function-ref name="set" scoped="" ref="0x405e8690"/>
        <function-ref name="led0On" scoped="" ref="0x405e8770"/>
        <function-ref name="led2On" scoped="" ref="0x405e8850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x405fdc80" loc="50:../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x405fdc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405fde58"/>
        <function-ref name="isInput" scoped="" ref="0x405ef010"/>
        <function-ref name="toggle" scoped="" ref="0x405ef0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x405ef1d0"/>
        <function-ref name="get" scoped="" ref="0x405ef2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405ef390"/>
        <function-ref name="set" scoped="" ref="0x405ef470"/>
        <function-ref name="clr" scoped="" ref="0x405ef550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x405f1a58" loc="46:../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x405f1a58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x405f1c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x405ef740" loc="51:../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x405ef740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405ef918"/>
        <function-ref name="isInput" scoped="" ref="0x405ef9f8"/>
        <function-ref name="toggle" scoped="" ref="0x405efad8"/>
        <function-ref name="isOutput" scoped="" ref="0x405efbb8"/>
        <function-ref name="get" scoped="" ref="0x405efc98"/>
        <function-ref name="makeOutput" scoped="" ref="0x405efd78"/>
        <function-ref name="set" scoped="" ref="0x405efe58"/>
        <function-ref name="clr" scoped="" ref="0x40600010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x405f1da0" loc="47:../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x405f1da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x405f0010"/>
        <function-ref name="led0Toggle" scoped="" ref="0x405f00f0"/>
        <function-ref name="led1On" scoped="" ref="0x405f01d0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x405f02b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x405f0390"/>
        <function-ref name="get" scoped="" ref="0x405f0470"/>
        <function-ref name="led1Off" scoped="" ref="0x405f0550"/>
        <function-ref name="led2Off" scoped="" ref="0x405f08d0"/>
        <function-ref name="set" scoped="" ref="0x405f0630"/>
        <function-ref name="led0On" scoped="" ref="0x405f0710"/>
        <function-ref name="led2On" scoped="" ref="0x405f07f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x40600200" loc="52:../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x40600200"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406003d8"/>
        <function-ref name="isInput" scoped="" ref="0x406004b8"/>
        <function-ref name="toggle" scoped="" ref="0x40600598"/>
        <function-ref name="isOutput" scoped="" ref="0x40600678"/>
        <function-ref name="get" scoped="" ref="0x40600758"/>
        <function-ref name="makeOutput" scoped="" ref="0x40600838"/>
        <function-ref name="set" scoped="" ref="0x40600918"/>
        <function-ref name="clr" scoped="" ref="0x406009f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x405e7c28" loc="41:../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x405e7c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405e7e00"/>
        <function-ref name="isInput" scoped="" ref="0x405e7ee0"/>
        <function-ref name="toggle" scoped="" ref="0x40611010"/>
        <function-ref name="isOutput" scoped="" ref="0x406110f0"/>
        <function-ref name="get" scoped="" ref="0x406111d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x406112b0"/>
        <function-ref name="set" scoped="" ref="0x40611390"/>
        <function-ref name="clr" scoped="" ref="0x40611470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x40611680" loc="42:../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x40611680"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40611858"/>
        <function-ref name="isInput" scoped="" ref="0x40611938"/>
        <function-ref name="toggle" scoped="" ref="0x40611a18"/>
        <function-ref name="isOutput" scoped="" ref="0x40611af8"/>
        <function-ref name="get" scoped="" ref="0x40611bd8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40611cb8"/>
        <function-ref name="set" scoped="" ref="0x40611d98"/>
        <function-ref name="clr" scoped="" ref="0x40611e78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x40610a38" loc="44:../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x40610a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40610c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x406100b0" loc="43:../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x406100b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40610288"/>
        <function-ref name="isInput" scoped="" ref="0x40610368"/>
        <function-ref name="toggle" scoped="" ref="0x40610448"/>
        <function-ref name="isOutput" scoped="" ref="0x40610528"/>
        <function-ref name="get" scoped="" ref="0x40610608"/>
        <function-ref name="makeOutput" scoped="" ref="0x406106e8"/>
        <function-ref name="set" scoped="" ref="0x406107c8"/>
        <function-ref name="clr" scoped="" ref="0x406108a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x40615368" loc="53:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x40615368"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40615540"/>
        <function-ref name="isInput" scoped="" ref="0x40615620"/>
        <function-ref name="setResistor" scoped="" ref="0x40615700"/>
        <function-ref name="toggle" scoped="" ref="0x406157e0"/>
        <function-ref name="isOutput" scoped="" ref="0x406158c0"/>
        <function-ref name="getResistor" scoped="" ref="0x406159a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40615a80"/>
        <function-ref name="get" scoped="" ref="0x40615b60"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40615c40"/>
        <function-ref name="getRaw" scoped="" ref="0x40615d20"/>
        <function-ref name="set" scoped="" ref="0x40615e00"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x40615ee0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40614010"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40614170"/>
        <function-ref name="clr" scoped="" ref="0x40614250"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x4061c4c8" loc="66:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x4061c4c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4061c6a0"/>
        <function-ref name="isInput" scoped="" ref="0x4061c780"/>
        <function-ref name="setResistor" scoped="" ref="0x4061c860"/>
        <function-ref name="toggle" scoped="" ref="0x4061c940"/>
        <function-ref name="isOutput" scoped="" ref="0x4061ca20"/>
        <function-ref name="getResistor" scoped="" ref="0x4061cb00"/>
        <function-ref name="makeOutput" scoped="" ref="0x4061cbe0"/>
        <function-ref name="get" scoped="" ref="0x4061ccc0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x4061cda0"/>
        <function-ref name="getRaw" scoped="" ref="0x4061ce80"/>
        <function-ref name="set" scoped="" ref="0x4062d010"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x4062d0f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x4062d1d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x4062d330"/>
        <function-ref name="clr" scoped="" ref="0x4062d410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x4064d668" loc="145:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x4064d668"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4064d840"/>
        <function-ref name="isInput" scoped="" ref="0x4064d920"/>
        <function-ref name="setResistor" scoped="" ref="0x4064da00"/>
        <function-ref name="toggle" scoped="" ref="0x4064dae0"/>
        <function-ref name="isOutput" scoped="" ref="0x4064dbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x4064dca0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4064dd80"/>
        <function-ref name="get" scoped="" ref="0x4064de60"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x4064c010"/>
        <function-ref name="getRaw" scoped="" ref="0x4064c0f0"/>
        <function-ref name="set" scoped="" ref="0x4064c1d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x4064c2b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x4064c390"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x4064c4f0"/>
        <function-ref name="clr" scoped="" ref="0x4064c5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x4065d3d8" loc="165:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x4065d3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4065d5b0"/>
        <function-ref name="isInput" scoped="" ref="0x4065d690"/>
        <function-ref name="setResistor" scoped="" ref="0x4065d770"/>
        <function-ref name="toggle" scoped="" ref="0x4065d850"/>
        <function-ref name="isOutput" scoped="" ref="0x4065d930"/>
        <function-ref name="getResistor" scoped="" ref="0x4065da10"/>
        <function-ref name="makeOutput" scoped="" ref="0x4065daf0"/>
        <function-ref name="get" scoped="" ref="0x4065dbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x4065dcb0"/>
        <function-ref name="getRaw" scoped="" ref="0x4065dd90"/>
        <function-ref name="set" scoped="" ref="0x4065de70"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x4065c010"/>
        <function-ref name="isIOFunc" scoped="" ref="0x4065c0f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x4065c250"/>
        <function-ref name="clr" scoped="" ref="0x4065c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x4064c840" loc="146:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x4064c840"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4064ca18"/>
        <function-ref name="isInput" scoped="" ref="0x4064caf8"/>
        <function-ref name="setResistor" scoped="" ref="0x4064cbd8"/>
        <function-ref name="toggle" scoped="" ref="0x4064ccb8"/>
        <function-ref name="isOutput" scoped="" ref="0x4064cd98"/>
        <function-ref name="getResistor" scoped="" ref="0x4064ce78"/>
        <function-ref name="makeOutput" scoped="" ref="0x4064b010"/>
        <function-ref name="get" scoped="" ref="0x4064b0f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x4064b1d0"/>
        <function-ref name="getRaw" scoped="" ref="0x4064b2b0"/>
        <function-ref name="set" scoped="" ref="0x4064b390"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x4064b470"/>
        <function-ref name="isIOFunc" scoped="" ref="0x4064b550"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x4064b6b0"/>
        <function-ref name="clr" scoped="" ref="0x4064b790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x4062c848" loc="71:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x4062c848"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4062ca20"/>
        <function-ref name="isInput" scoped="" ref="0x4062cb00"/>
        <function-ref name="setResistor" scoped="" ref="0x4062cbe0"/>
        <function-ref name="toggle" scoped="" ref="0x4062ccc0"/>
        <function-ref name="isOutput" scoped="" ref="0x4062cda0"/>
        <function-ref name="getResistor" scoped="" ref="0x4062ce80"/>
        <function-ref name="makeOutput" scoped="" ref="0x4062b010"/>
        <function-ref name="get" scoped="" ref="0x4062b0f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x4062b1d0"/>
        <function-ref name="getRaw" scoped="" ref="0x4062b2b0"/>
        <function-ref name="set" scoped="" ref="0x4062b390"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x4062b470"/>
        <function-ref name="isIOFunc" scoped="" ref="0x4062b550"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x4062b6b0"/>
        <function-ref name="clr" scoped="" ref="0x4062b790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x40633ae8" loc="84:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x40633ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40633cc0"/>
        <function-ref name="isInput" scoped="" ref="0x40633da0"/>
        <function-ref name="setResistor" scoped="" ref="0x40633e80"/>
        <function-ref name="toggle" scoped="" ref="0x40631010"/>
        <function-ref name="isOutput" scoped="" ref="0x406310f0"/>
        <function-ref name="getResistor" scoped="" ref="0x406311d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x406312b0"/>
        <function-ref name="get" scoped="" ref="0x40631390"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40631470"/>
        <function-ref name="getRaw" scoped="" ref="0x40631550"/>
        <function-ref name="set" scoped="" ref="0x40631630"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x40631710"/>
        <function-ref name="isIOFunc" scoped="" ref="0x406317f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40631950"/>
        <function-ref name="clr" scoped="" ref="0x40631a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x40639bc8" loc="97:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x40639bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40639da0"/>
        <function-ref name="isInput" scoped="" ref="0x40639e80"/>
        <function-ref name="setResistor" scoped="" ref="0x40638010"/>
        <function-ref name="toggle" scoped="" ref="0x406380f0"/>
        <function-ref name="isOutput" scoped="" ref="0x406381d0"/>
        <function-ref name="getResistor" scoped="" ref="0x406382b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40638390"/>
        <function-ref name="get" scoped="" ref="0x40638470"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40638550"/>
        <function-ref name="getRaw" scoped="" ref="0x40638630"/>
        <function-ref name="set" scoped="" ref="0x40638710"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x406387f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x406388d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40638a30"/>
        <function-ref name="clr" scoped="" ref="0x40638b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x40642a08" loc="108:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x40642a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40642be0"/>
        <function-ref name="isInput" scoped="" ref="0x40642cc0"/>
        <function-ref name="setResistor" scoped="" ref="0x40642da0"/>
        <function-ref name="toggle" scoped="" ref="0x40642e80"/>
        <function-ref name="isOutput" scoped="" ref="0x40641010"/>
        <function-ref name="getResistor" scoped="" ref="0x406410f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x406411d0"/>
        <function-ref name="get" scoped="" ref="0x406412b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40641390"/>
        <function-ref name="getRaw" scoped="" ref="0x40641470"/>
        <function-ref name="set" scoped="" ref="0x40641550"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x40641630"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40641710"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40641870"/>
        <function-ref name="clr" scoped="" ref="0x40641950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x40649d80" loc="149:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x40649d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4065a010"/>
        <function-ref name="isInput" scoped="" ref="0x4065a0f0"/>
        <function-ref name="setResistor" scoped="" ref="0x4065a1d0"/>
        <function-ref name="toggle" scoped="" ref="0x4065a2b0"/>
        <function-ref name="isOutput" scoped="" ref="0x4065a390"/>
        <function-ref name="getResistor" scoped="" ref="0x4065a470"/>
        <function-ref name="makeOutput" scoped="" ref="0x4065a550"/>
        <function-ref name="get" scoped="" ref="0x4065a630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x4065a710"/>
        <function-ref name="getRaw" scoped="" ref="0x4065a7f0"/>
        <function-ref name="set" scoped="" ref="0x4065a8d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x4065a9b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x4065aa90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x4065abf0"/>
        <function-ref name="clr" scoped="" ref="0x4065acd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x40652ad8" loc="159:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x40652ad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40652cb0"/>
        <function-ref name="isInput" scoped="" ref="0x40652d90"/>
        <function-ref name="setResistor" scoped="" ref="0x40652e70"/>
        <function-ref name="toggle" scoped="" ref="0x40664010"/>
        <function-ref name="isOutput" scoped="" ref="0x406640f0"/>
        <function-ref name="getResistor" scoped="" ref="0x406641d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x406642b0"/>
        <function-ref name="get" scoped="" ref="0x40664390"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40664470"/>
        <function-ref name="getRaw" scoped="" ref="0x40664550"/>
        <function-ref name="set" scoped="" ref="0x40664630"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x40664710"/>
        <function-ref name="isIOFunc" scoped="" ref="0x406647f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40664950"/>
        <function-ref name="clr" scoped="" ref="0x40664a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x4066dae0" loc="171:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x4066dae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4066dcb8"/>
        <function-ref name="isInput" scoped="" ref="0x4066dd98"/>
        <function-ref name="setResistor" scoped="" ref="0x4066de78"/>
        <function-ref name="toggle" scoped="" ref="0x4066c010"/>
        <function-ref name="isOutput" scoped="" ref="0x4066c0f0"/>
        <function-ref name="getResistor" scoped="" ref="0x4066c1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4066c2b0"/>
        <function-ref name="get" scoped="" ref="0x4066c390"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x4066c470"/>
        <function-ref name="getRaw" scoped="" ref="0x4066c550"/>
        <function-ref name="set" scoped="" ref="0x4066c630"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x4066c710"/>
        <function-ref name="isIOFunc" scoped="" ref="0x4066c7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x4066c950"/>
        <function-ref name="clr" scoped="" ref="0x4066ca30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x40624848" loc="56:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x40624848"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40624a20"/>
        <function-ref name="isInput" scoped="" ref="0x40624b00"/>
        <function-ref name="setResistor" scoped="" ref="0x40624be0"/>
        <function-ref name="toggle" scoped="" ref="0x40624cc0"/>
        <function-ref name="isOutput" scoped="" ref="0x40624da0"/>
        <function-ref name="getResistor" scoped="" ref="0x40624e80"/>
        <function-ref name="makeOutput" scoped="" ref="0x40623010"/>
        <function-ref name="get" scoped="" ref="0x406230f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x406231d0"/>
        <function-ref name="getRaw" scoped="" ref="0x406232b0"/>
        <function-ref name="set" scoped="" ref="0x40623390"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x40623470"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40623550"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x406236b0"/>
        <function-ref name="clr" scoped="" ref="0x40623790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x40659010" loc="150:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x40659010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406591e8"/>
        <function-ref name="isInput" scoped="" ref="0x406592c8"/>
        <function-ref name="setResistor" scoped="" ref="0x406593a8"/>
        <function-ref name="toggle" scoped="" ref="0x40659488"/>
        <function-ref name="isOutput" scoped="" ref="0x40659568"/>
        <function-ref name="getResistor" scoped="" ref="0x40659648"/>
        <function-ref name="makeOutput" scoped="" ref="0x40659728"/>
        <function-ref name="get" scoped="" ref="0x40659808"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x406598e8"/>
        <function-ref name="getRaw" scoped="" ref="0x406599c8"/>
        <function-ref name="set" scoped="" ref="0x40659aa8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x40659b88"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40659c68"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40659dc8"/>
        <function-ref name="clr" scoped="" ref="0x40659ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x40622bc8" loc="61:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x40622bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40622da0"/>
        <function-ref name="isInput" scoped="" ref="0x40622e80"/>
        <function-ref name="setResistor" scoped="" ref="0x40621010"/>
        <function-ref name="toggle" scoped="" ref="0x406210f0"/>
        <function-ref name="isOutput" scoped="" ref="0x406211d0"/>
        <function-ref name="getResistor" scoped="" ref="0x406212b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40621390"/>
        <function-ref name="get" scoped="" ref="0x40621470"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40621550"/>
        <function-ref name="getRaw" scoped="" ref="0x40621630"/>
        <function-ref name="set" scoped="" ref="0x40621710"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x406217f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x406218d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40621a30"/>
        <function-ref name="clr" scoped="" ref="0x40621b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x40629d88" loc="74:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x40629d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40628010"/>
        <function-ref name="isInput" scoped="" ref="0x406280f0"/>
        <function-ref name="setResistor" scoped="" ref="0x406281d0"/>
        <function-ref name="toggle" scoped="" ref="0x406282b0"/>
        <function-ref name="isOutput" scoped="" ref="0x40628390"/>
        <function-ref name="getResistor" scoped="" ref="0x40628470"/>
        <function-ref name="makeOutput" scoped="" ref="0x40628550"/>
        <function-ref name="get" scoped="" ref="0x40628630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40628710"/>
        <function-ref name="getRaw" scoped="" ref="0x406287f0"/>
        <function-ref name="set" scoped="" ref="0x406288d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x406289b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40628a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40628bf0"/>
        <function-ref name="clr" scoped="" ref="0x40628cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x4062e010" loc="87:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x4062e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4062e1e8"/>
        <function-ref name="isInput" scoped="" ref="0x4062e2c8"/>
        <function-ref name="setResistor" scoped="" ref="0x4062e3a8"/>
        <function-ref name="toggle" scoped="" ref="0x4062e488"/>
        <function-ref name="isOutput" scoped="" ref="0x4062e568"/>
        <function-ref name="getResistor" scoped="" ref="0x4062e648"/>
        <function-ref name="makeOutput" scoped="" ref="0x4062e728"/>
        <function-ref name="get" scoped="" ref="0x4062e808"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x4062e8e8"/>
        <function-ref name="getRaw" scoped="" ref="0x4062e9c8"/>
        <function-ref name="set" scoped="" ref="0x4062eaa8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x4062eb88"/>
        <function-ref name="isIOFunc" scoped="" ref="0x4062ec68"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x4062edc8"/>
        <function-ref name="clr" scoped="" ref="0x4062eea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x40647178" loc="100:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x40647178"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40647350"/>
        <function-ref name="isInput" scoped="" ref="0x40647430"/>
        <function-ref name="setResistor" scoped="" ref="0x40647510"/>
        <function-ref name="toggle" scoped="" ref="0x406475f0"/>
        <function-ref name="isOutput" scoped="" ref="0x406476d0"/>
        <function-ref name="getResistor" scoped="" ref="0x406477b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40647890"/>
        <function-ref name="get" scoped="" ref="0x40647970"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40647a50"/>
        <function-ref name="getRaw" scoped="" ref="0x40647b30"/>
        <function-ref name="set" scoped="" ref="0x40647c10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x40647cf0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40647dd0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40646010"/>
        <function-ref name="clr" scoped="" ref="0x406460f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x40650010" loc="111:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x40650010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406501e8"/>
        <function-ref name="isInput" scoped="" ref="0x406502c8"/>
        <function-ref name="setResistor" scoped="" ref="0x406503a8"/>
        <function-ref name="toggle" scoped="" ref="0x40650488"/>
        <function-ref name="isOutput" scoped="" ref="0x40650568"/>
        <function-ref name="getResistor" scoped="" ref="0x40650648"/>
        <function-ref name="makeOutput" scoped="" ref="0x40650728"/>
        <function-ref name="get" scoped="" ref="0x40650808"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x406508e8"/>
        <function-ref name="getRaw" scoped="" ref="0x406509c8"/>
        <function-ref name="set" scoped="" ref="0x40650aa8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x40650b88"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40650c68"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40650dc8"/>
        <function-ref name="clr" scoped="" ref="0x40650ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x40617010" loc="51:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x40617010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406171e8"/>
        <function-ref name="isInput" scoped="" ref="0x406172c8"/>
        <function-ref name="setResistor" scoped="" ref="0x406173a8"/>
        <function-ref name="toggle" scoped="" ref="0x40617488"/>
        <function-ref name="isOutput" scoped="" ref="0x40617568"/>
        <function-ref name="getResistor" scoped="" ref="0x40617648"/>
        <function-ref name="makeOutput" scoped="" ref="0x40617728"/>
        <function-ref name="get" scoped="" ref="0x40617808"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x406178e8"/>
        <function-ref name="getRaw" scoped="" ref="0x406179c8"/>
        <function-ref name="set" scoped="" ref="0x40617aa8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x40617b88"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40617c68"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40617dc8"/>
        <function-ref name="clr" scoped="" ref="0x40617ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x4061e178" loc="64:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x4061e178"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4061e3d0"/>
        <function-ref name="isInput" scoped="" ref="0x4061e4b0"/>
        <function-ref name="setResistor" scoped="" ref="0x4061e590"/>
        <function-ref name="toggle" scoped="" ref="0x4061e670"/>
        <function-ref name="isOutput" scoped="" ref="0x4061e750"/>
        <function-ref name="getResistor" scoped="" ref="0x4061e830"/>
        <function-ref name="makeOutput" scoped="" ref="0x4061e910"/>
        <function-ref name="get" scoped="" ref="0x4061e9f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x4061ead0"/>
        <function-ref name="getRaw" scoped="" ref="0x4061ebb0"/>
        <function-ref name="set" scoped="" ref="0x4061ec90"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x4061ed70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x4061ee50"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x4061d010"/>
        <function-ref name="clr" scoped="" ref="0x4061d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x40625368" loc="77:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x40625368"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40625540"/>
        <function-ref name="isInput" scoped="" ref="0x40625620"/>
        <function-ref name="setResistor" scoped="" ref="0x40625700"/>
        <function-ref name="toggle" scoped="" ref="0x406257e0"/>
        <function-ref name="isOutput" scoped="" ref="0x406258c0"/>
        <function-ref name="getResistor" scoped="" ref="0x406259a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40625a80"/>
        <function-ref name="get" scoped="" ref="0x40625b60"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40625c40"/>
        <function-ref name="getRaw" scoped="" ref="0x40625d20"/>
        <function-ref name="set" scoped="" ref="0x40625e00"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x40625ee0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40636010"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40636170"/>
        <function-ref name="clr" scoped="" ref="0x40636250"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x4064e4c0" loc="144:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x4064e4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4064e698"/>
        <function-ref name="isInput" scoped="" ref="0x4064e778"/>
        <function-ref name="setResistor" scoped="" ref="0x4064e858"/>
        <function-ref name="toggle" scoped="" ref="0x4064e938"/>
        <function-ref name="isOutput" scoped="" ref="0x4064ea18"/>
        <function-ref name="getResistor" scoped="" ref="0x4064eaf8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4064ebd8"/>
        <function-ref name="get" scoped="" ref="0x4064ecb8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x4064ed98"/>
        <function-ref name="getRaw" scoped="" ref="0x4064ee78"/>
        <function-ref name="set" scoped="" ref="0x4064d010"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x4064d0f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x4064d1d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x4064d330"/>
        <function-ref name="clr" scoped="" ref="0x4064d410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x40660010" loc="162:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x40660010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406601e8"/>
        <function-ref name="isInput" scoped="" ref="0x406602c8"/>
        <function-ref name="setResistor" scoped="" ref="0x406603a8"/>
        <function-ref name="toggle" scoped="" ref="0x40660488"/>
        <function-ref name="isOutput" scoped="" ref="0x40660568"/>
        <function-ref name="getResistor" scoped="" ref="0x40660648"/>
        <function-ref name="makeOutput" scoped="" ref="0x40660728"/>
        <function-ref name="get" scoped="" ref="0x40660808"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x406608e8"/>
        <function-ref name="getRaw" scoped="" ref="0x406609c8"/>
        <function-ref name="set" scoped="" ref="0x40660aa8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x40660b88"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40660c68"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40660dc8"/>
        <function-ref name="clr" scoped="" ref="0x40660ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x4066e918" loc="169:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x4066e918"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4066eaf0"/>
        <function-ref name="isInput" scoped="" ref="0x4066ebd0"/>
        <function-ref name="setResistor" scoped="" ref="0x4066ecb0"/>
        <function-ref name="toggle" scoped="" ref="0x4066ed90"/>
        <function-ref name="isOutput" scoped="" ref="0x4066ee70"/>
        <function-ref name="getResistor" scoped="" ref="0x4066d010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4066d0f0"/>
        <function-ref name="get" scoped="" ref="0x4066d1d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x4066d2b0"/>
        <function-ref name="getRaw" scoped="" ref="0x4066d390"/>
        <function-ref name="set" scoped="" ref="0x4066d470"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x4066d550"/>
        <function-ref name="isIOFunc" scoped="" ref="0x4066d630"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x4066d790"/>
        <function-ref name="clr" scoped="" ref="0x4066d870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x406555a0" loc="155:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x406555a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40655778"/>
        <function-ref name="isInput" scoped="" ref="0x40655858"/>
        <function-ref name="setResistor" scoped="" ref="0x40655938"/>
        <function-ref name="toggle" scoped="" ref="0x40655a18"/>
        <function-ref name="isOutput" scoped="" ref="0x40655af8"/>
        <function-ref name="getResistor" scoped="" ref="0x40655bd8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40655cb8"/>
        <function-ref name="get" scoped="" ref="0x40655d98"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40655e78"/>
        <function-ref name="getRaw" scoped="" ref="0x40654010"/>
        <function-ref name="set" scoped="" ref="0x406540f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x406541d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x406542b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40654410"/>
        <function-ref name="clr" scoped="" ref="0x406544f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x40635688" loc="82:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x40635688"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40635960"/>
        <function-ref name="isInput" scoped="" ref="0x40635a40"/>
        <function-ref name="setResistor" scoped="" ref="0x40635b20"/>
        <function-ref name="toggle" scoped="" ref="0x40635c00"/>
        <function-ref name="isOutput" scoped="" ref="0x40635ce0"/>
        <function-ref name="getResistor" scoped="" ref="0x40635dc0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40635ea0"/>
        <function-ref name="get" scoped="" ref="0x40634010"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x406340f0"/>
        <function-ref name="getRaw" scoped="" ref="0x406341d0"/>
        <function-ref name="set" scoped="" ref="0x406342b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x40634390"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40634470"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x406345d0"/>
        <function-ref name="clr" scoped="" ref="0x406346b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x4063b848" loc="95:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x4063b848"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4063ba20"/>
        <function-ref name="isInput" scoped="" ref="0x4063bb00"/>
        <function-ref name="setResistor" scoped="" ref="0x4063bbe0"/>
        <function-ref name="toggle" scoped="" ref="0x4063bcc0"/>
        <function-ref name="isOutput" scoped="" ref="0x4063bda0"/>
        <function-ref name="getResistor" scoped="" ref="0x4063be80"/>
        <function-ref name="makeOutput" scoped="" ref="0x4063a010"/>
        <function-ref name="get" scoped="" ref="0x4063a0f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x4063a1d0"/>
        <function-ref name="getRaw" scoped="" ref="0x4063a2b0"/>
        <function-ref name="set" scoped="" ref="0x4063a390"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x4063a470"/>
        <function-ref name="isIOFunc" scoped="" ref="0x4063a550"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x4063a6b0"/>
        <function-ref name="clr" scoped="" ref="0x4063a790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x40644688" loc="106:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x40644688"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40644860"/>
        <function-ref name="isInput" scoped="" ref="0x40644940"/>
        <function-ref name="setResistor" scoped="" ref="0x40644a20"/>
        <function-ref name="toggle" scoped="" ref="0x40644b00"/>
        <function-ref name="isOutput" scoped="" ref="0x40644be0"/>
        <function-ref name="getResistor" scoped="" ref="0x40644cc0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40644da0"/>
        <function-ref name="get" scoped="" ref="0x40644e80"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40643010"/>
        <function-ref name="getRaw" scoped="" ref="0x406430f0"/>
        <function-ref name="set" scoped="" ref="0x406431d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x406432b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40643390"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x406434f0"/>
        <function-ref name="clr" scoped="" ref="0x406435d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x4065f168" loc="163:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x4065f168"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4065f340"/>
        <function-ref name="isInput" scoped="" ref="0x4065f420"/>
        <function-ref name="setResistor" scoped="" ref="0x4065f500"/>
        <function-ref name="toggle" scoped="" ref="0x4065f5e0"/>
        <function-ref name="isOutput" scoped="" ref="0x4065f6c0"/>
        <function-ref name="getResistor" scoped="" ref="0x4065f7a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4065f880"/>
        <function-ref name="get" scoped="" ref="0x4065f960"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x4065fa40"/>
        <function-ref name="getRaw" scoped="" ref="0x4065fb20"/>
        <function-ref name="set" scoped="" ref="0x4065fc00"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x4065fce0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x4065fdc0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x4065ff20"/>
        <function-ref name="clr" scoped="" ref="0x4065e018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x40658168" loc="152:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x40658168"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40658340"/>
        <function-ref name="isInput" scoped="" ref="0x40658420"/>
        <function-ref name="setResistor" scoped="" ref="0x40658500"/>
        <function-ref name="toggle" scoped="" ref="0x406585e0"/>
        <function-ref name="isOutput" scoped="" ref="0x406586c0"/>
        <function-ref name="getResistor" scoped="" ref="0x406587a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40658880"/>
        <function-ref name="get" scoped="" ref="0x40658960"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40658a40"/>
        <function-ref name="getRaw" scoped="" ref="0x40658b20"/>
        <function-ref name="set" scoped="" ref="0x40658c00"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x40658ce0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40658dc0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40658f20"/>
        <function-ref name="clr" scoped="" ref="0x40657018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x406144c8" loc="54:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x406144c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406146a0"/>
        <function-ref name="isInput" scoped="" ref="0x40614780"/>
        <function-ref name="setResistor" scoped="" ref="0x40614860"/>
        <function-ref name="toggle" scoped="" ref="0x40614940"/>
        <function-ref name="isOutput" scoped="" ref="0x40614a20"/>
        <function-ref name="getResistor" scoped="" ref="0x40614b00"/>
        <function-ref name="makeOutput" scoped="" ref="0x40614be0"/>
        <function-ref name="get" scoped="" ref="0x40614cc0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40614da0"/>
        <function-ref name="getRaw" scoped="" ref="0x40614e80"/>
        <function-ref name="set" scoped="" ref="0x40613010"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x406130f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x406131d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40613330"/>
        <function-ref name="clr" scoped="" ref="0x40613410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x4062d688" loc="67:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x4062d688"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4062d860"/>
        <function-ref name="isInput" scoped="" ref="0x4062d940"/>
        <function-ref name="setResistor" scoped="" ref="0x4062da20"/>
        <function-ref name="toggle" scoped="" ref="0x4062db00"/>
        <function-ref name="isOutput" scoped="" ref="0x4062dbe0"/>
        <function-ref name="getResistor" scoped="" ref="0x4062dcc0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4062dda0"/>
        <function-ref name="get" scoped="" ref="0x4062de80"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x4062c010"/>
        <function-ref name="getRaw" scoped="" ref="0x4062c0f0"/>
        <function-ref name="set" scoped="" ref="0x4062c1d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x4062c2b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x4062c390"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x4062c4f0"/>
        <function-ref name="clr" scoped="" ref="0x4062c5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x40646368" loc="104:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x40646368"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40646540"/>
        <function-ref name="isInput" scoped="" ref="0x40646620"/>
        <function-ref name="setResistor" scoped="" ref="0x40646700"/>
        <function-ref name="toggle" scoped="" ref="0x406467e0"/>
        <function-ref name="isOutput" scoped="" ref="0x406468c0"/>
        <function-ref name="getResistor" scoped="" ref="0x406469a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40646a80"/>
        <function-ref name="get" scoped="" ref="0x40646b60"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40646c40"/>
        <function-ref name="getRaw" scoped="" ref="0x40646d20"/>
        <function-ref name="set" scoped="" ref="0x40646e00"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x40646ee0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40645010"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40645170"/>
        <function-ref name="clr" scoped="" ref="0x40645250"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x4062ba08" loc="72:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x4062ba08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4062bbe0"/>
        <function-ref name="isInput" scoped="" ref="0x4062bcc0"/>
        <function-ref name="setResistor" scoped="" ref="0x4062bda0"/>
        <function-ref name="toggle" scoped="" ref="0x4062be80"/>
        <function-ref name="isOutput" scoped="" ref="0x4062a010"/>
        <function-ref name="getResistor" scoped="" ref="0x4062a0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4062a1d0"/>
        <function-ref name="get" scoped="" ref="0x4062a2b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x4062a390"/>
        <function-ref name="getRaw" scoped="" ref="0x4062a470"/>
        <function-ref name="set" scoped="" ref="0x4062a550"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x4062a630"/>
        <function-ref name="isIOFunc" scoped="" ref="0x4062a710"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x4062a870"/>
        <function-ref name="clr" scoped="" ref="0x4062a950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x40631ca8" loc="85:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x40631ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40631e80"/>
        <function-ref name="isInput" scoped="" ref="0x40630010"/>
        <function-ref name="setResistor" scoped="" ref="0x406300f0"/>
        <function-ref name="toggle" scoped="" ref="0x406301d0"/>
        <function-ref name="isOutput" scoped="" ref="0x406302b0"/>
        <function-ref name="getResistor" scoped="" ref="0x40630390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40630470"/>
        <function-ref name="get" scoped="" ref="0x40630550"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40630630"/>
        <function-ref name="getRaw" scoped="" ref="0x40630710"/>
        <function-ref name="set" scoped="" ref="0x406307f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x406308d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x406309b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40630b10"/>
        <function-ref name="clr" scoped="" ref="0x40630bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x40638d88" loc="98:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x40638d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40637010"/>
        <function-ref name="isInput" scoped="" ref="0x406370f0"/>
        <function-ref name="setResistor" scoped="" ref="0x406371d0"/>
        <function-ref name="toggle" scoped="" ref="0x406372b0"/>
        <function-ref name="isOutput" scoped="" ref="0x40637390"/>
        <function-ref name="getResistor" scoped="" ref="0x40637470"/>
        <function-ref name="makeOutput" scoped="" ref="0x40637550"/>
        <function-ref name="get" scoped="" ref="0x40637630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40637710"/>
        <function-ref name="getRaw" scoped="" ref="0x406377f0"/>
        <function-ref name="set" scoped="" ref="0x406378d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x406379b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40637a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40637bf0"/>
        <function-ref name="clr" scoped="" ref="0x40637cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x40641bc8" loc="109:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x40641bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40641da0"/>
        <function-ref name="isInput" scoped="" ref="0x40641e80"/>
        <function-ref name="setResistor" scoped="" ref="0x40640010"/>
        <function-ref name="toggle" scoped="" ref="0x406400f0"/>
        <function-ref name="isOutput" scoped="" ref="0x406401d0"/>
        <function-ref name="getResistor" scoped="" ref="0x406402b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40640390"/>
        <function-ref name="get" scoped="" ref="0x40640470"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40640550"/>
        <function-ref name="getRaw" scoped="" ref="0x40640630"/>
        <function-ref name="set" scoped="" ref="0x40640710"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x406407f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x406408d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40640a30"/>
        <function-ref name="clr" scoped="" ref="0x40640b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x406563e0" loc="154:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x406563e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406565b8"/>
        <function-ref name="isInput" scoped="" ref="0x40656698"/>
        <function-ref name="setResistor" scoped="" ref="0x40656778"/>
        <function-ref name="toggle" scoped="" ref="0x40656858"/>
        <function-ref name="isOutput" scoped="" ref="0x40656938"/>
        <function-ref name="getResistor" scoped="" ref="0x40656a18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40656af8"/>
        <function-ref name="get" scoped="" ref="0x40656bd8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40656cb8"/>
        <function-ref name="getRaw" scoped="" ref="0x40656d98"/>
        <function-ref name="set" scoped="" ref="0x40656e78"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x40655010"/>
        <function-ref name="isIOFunc" scoped="" ref="0x406550f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40655250"/>
        <function-ref name="clr" scoped="" ref="0x40655330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x40618ce8" loc="49:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x40618ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40618ec0"/>
        <function-ref name="isInput" scoped="" ref="0x4060c010"/>
        <function-ref name="setResistor" scoped="" ref="0x4060c0f0"/>
        <function-ref name="toggle" scoped="" ref="0x4060c1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4060c2b0"/>
        <function-ref name="getResistor" scoped="" ref="0x4060c390"/>
        <function-ref name="makeOutput" scoped="" ref="0x4060c470"/>
        <function-ref name="get" scoped="" ref="0x4060c550"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x4060c630"/>
        <function-ref name="getRaw" scoped="" ref="0x4060c710"/>
        <function-ref name="set" scoped="" ref="0x4060c7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x4060c8d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x4060c9b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x4060cb10"/>
        <function-ref name="clr" scoped="" ref="0x4060cbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x40621d88" loc="62:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x40621d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40620010"/>
        <function-ref name="isInput" scoped="" ref="0x406200f0"/>
        <function-ref name="setResistor" scoped="" ref="0x406201d0"/>
        <function-ref name="toggle" scoped="" ref="0x406202b0"/>
        <function-ref name="isOutput" scoped="" ref="0x40620390"/>
        <function-ref name="getResistor" scoped="" ref="0x40620470"/>
        <function-ref name="makeOutput" scoped="" ref="0x40620550"/>
        <function-ref name="get" scoped="" ref="0x40620630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40620710"/>
        <function-ref name="getRaw" scoped="" ref="0x406207f0"/>
        <function-ref name="set" scoped="" ref="0x406208d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x406209b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40620a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40620bf0"/>
        <function-ref name="clr" scoped="" ref="0x40620cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x40627010" loc="75:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x40627010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406271e8"/>
        <function-ref name="isInput" scoped="" ref="0x406272c8"/>
        <function-ref name="setResistor" scoped="" ref="0x406273a8"/>
        <function-ref name="toggle" scoped="" ref="0x40627488"/>
        <function-ref name="isOutput" scoped="" ref="0x40627568"/>
        <function-ref name="getResistor" scoped="" ref="0x40627648"/>
        <function-ref name="makeOutput" scoped="" ref="0x40627728"/>
        <function-ref name="get" scoped="" ref="0x40627808"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x406278e8"/>
        <function-ref name="getRaw" scoped="" ref="0x406279c8"/>
        <function-ref name="set" scoped="" ref="0x40627aa8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x40627b88"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40627c68"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40627dc8"/>
        <function-ref name="clr" scoped="" ref="0x40627ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x4063f178" loc="88:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x4063f178"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4063f350"/>
        <function-ref name="isInput" scoped="" ref="0x4063f430"/>
        <function-ref name="setResistor" scoped="" ref="0x4063f510"/>
        <function-ref name="toggle" scoped="" ref="0x4063f5f0"/>
        <function-ref name="isOutput" scoped="" ref="0x4063f6d0"/>
        <function-ref name="getResistor" scoped="" ref="0x4063f7b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4063f890"/>
        <function-ref name="get" scoped="" ref="0x4063f970"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x4063fa50"/>
        <function-ref name="getRaw" scoped="" ref="0x4063fb30"/>
        <function-ref name="set" scoped="" ref="0x4063fc10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x4063fcf0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x4063fdd0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x4063e010"/>
        <function-ref name="clr" scoped="" ref="0x4063e0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x40654760" loc="156:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x40654760"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40654938"/>
        <function-ref name="isInput" scoped="" ref="0x40654a18"/>
        <function-ref name="setResistor" scoped="" ref="0x40654af8"/>
        <function-ref name="toggle" scoped="" ref="0x40654bd8"/>
        <function-ref name="isOutput" scoped="" ref="0x40654cb8"/>
        <function-ref name="getResistor" scoped="" ref="0x40654d98"/>
        <function-ref name="makeOutput" scoped="" ref="0x40654e78"/>
        <function-ref name="get" scoped="" ref="0x40653010"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x406530f0"/>
        <function-ref name="getRaw" scoped="" ref="0x406531d0"/>
        <function-ref name="set" scoped="" ref="0x406532b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x40653390"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40653470"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x406535d0"/>
        <function-ref name="clr" scoped="" ref="0x406536b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x40664c98" loc="160:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x40664c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40664e70"/>
        <function-ref name="isInput" scoped="" ref="0x40663010"/>
        <function-ref name="setResistor" scoped="" ref="0x406630f0"/>
        <function-ref name="toggle" scoped="" ref="0x406631d0"/>
        <function-ref name="isOutput" scoped="" ref="0x406632b0"/>
        <function-ref name="getResistor" scoped="" ref="0x40663390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40663470"/>
        <function-ref name="get" scoped="" ref="0x40663550"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40663630"/>
        <function-ref name="getRaw" scoped="" ref="0x40663710"/>
        <function-ref name="set" scoped="" ref="0x406637f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x406638d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x406639b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40663b10"/>
        <function-ref name="clr" scoped="" ref="0x40663bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x4065c598" loc="166:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x4065c598"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4065c770"/>
        <function-ref name="isInput" scoped="" ref="0x4065c850"/>
        <function-ref name="setResistor" scoped="" ref="0x4065c930"/>
        <function-ref name="toggle" scoped="" ref="0x4065ca10"/>
        <function-ref name="isOutput" scoped="" ref="0x4065caf0"/>
        <function-ref name="getResistor" scoped="" ref="0x4065cbd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4065ccb0"/>
        <function-ref name="get" scoped="" ref="0x4065cd90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x4065ce70"/>
        <function-ref name="getRaw" scoped="" ref="0x4065b010"/>
        <function-ref name="set" scoped="" ref="0x4065b0f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x4065b1d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x4065b2b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x4065b410"/>
        <function-ref name="clr" scoped="" ref="0x4065b4f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x4063d4c8" loc="93:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x4063d4c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4063d6a0"/>
        <function-ref name="isInput" scoped="" ref="0x4063d780"/>
        <function-ref name="setResistor" scoped="" ref="0x4063d860"/>
        <function-ref name="toggle" scoped="" ref="0x4063d940"/>
        <function-ref name="isOutput" scoped="" ref="0x4063da20"/>
        <function-ref name="getResistor" scoped="" ref="0x4063db00"/>
        <function-ref name="makeOutput" scoped="" ref="0x4063dbe0"/>
        <function-ref name="get" scoped="" ref="0x4063dcc0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x4063dda0"/>
        <function-ref name="getRaw" scoped="" ref="0x4063de80"/>
        <function-ref name="set" scoped="" ref="0x4063c010"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x4063c0f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x4063c1d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x4063c330"/>
        <function-ref name="clr" scoped="" ref="0x4063c410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x40653920" loc="157:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x40653920"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40653af8"/>
        <function-ref name="isInput" scoped="" ref="0x40653bd8"/>
        <function-ref name="setResistor" scoped="" ref="0x40653cb8"/>
        <function-ref name="toggle" scoped="" ref="0x40653d98"/>
        <function-ref name="isOutput" scoped="" ref="0x40653e78"/>
        <function-ref name="getResistor" scoped="" ref="0x40652010"/>
        <function-ref name="makeOutput" scoped="" ref="0x406520f0"/>
        <function-ref name="get" scoped="" ref="0x406521d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x406522b0"/>
        <function-ref name="getRaw" scoped="" ref="0x40652390"/>
        <function-ref name="set" scoped="" ref="0x40652470"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x40652550"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40652630"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40652790"/>
        <function-ref name="clr" scoped="" ref="0x40652870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x40616178" loc="52:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x40616178"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40616350"/>
        <function-ref name="isInput" scoped="" ref="0x40616430"/>
        <function-ref name="setResistor" scoped="" ref="0x40616510"/>
        <function-ref name="toggle" scoped="" ref="0x406165f0"/>
        <function-ref name="isOutput" scoped="" ref="0x406166d0"/>
        <function-ref name="getResistor" scoped="" ref="0x406167b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40616890"/>
        <function-ref name="get" scoped="" ref="0x40616970"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40616a50"/>
        <function-ref name="getRaw" scoped="" ref="0x40616b30"/>
        <function-ref name="set" scoped="" ref="0x40616c10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x40616cf0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40616dd0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40615010"/>
        <function-ref name="clr" scoped="" ref="0x406150f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x4061d368" loc="65:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x4061d368"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4061d540"/>
        <function-ref name="isInput" scoped="" ref="0x4061d620"/>
        <function-ref name="setResistor" scoped="" ref="0x4061d700"/>
        <function-ref name="toggle" scoped="" ref="0x4061d7e0"/>
        <function-ref name="isOutput" scoped="" ref="0x4061d8c0"/>
        <function-ref name="getResistor" scoped="" ref="0x4061d9a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4061da80"/>
        <function-ref name="get" scoped="" ref="0x4061db60"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x4061dc40"/>
        <function-ref name="getRaw" scoped="" ref="0x4061dd20"/>
        <function-ref name="set" scoped="" ref="0x4061de00"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x4061dee0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x4061c010"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x4061c170"/>
        <function-ref name="clr" scoped="" ref="0x4061c250"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x406364c8" loc="78:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x406364c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406366a0"/>
        <function-ref name="isInput" scoped="" ref="0x40636780"/>
        <function-ref name="setResistor" scoped="" ref="0x40636860"/>
        <function-ref name="toggle" scoped="" ref="0x40636940"/>
        <function-ref name="isOutput" scoped="" ref="0x40636a20"/>
        <function-ref name="getResistor" scoped="" ref="0x40636b00"/>
        <function-ref name="makeOutput" scoped="" ref="0x40636be0"/>
        <function-ref name="get" scoped="" ref="0x40636cc0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40636da0"/>
        <function-ref name="getRaw" scoped="" ref="0x40636e80"/>
        <function-ref name="set" scoped="" ref="0x40635010"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x406350f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x406351d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40635330"/>
        <function-ref name="clr" scoped="" ref="0x40635410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x40657288" loc="153:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x40657288"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40657460"/>
        <function-ref name="isInput" scoped="" ref="0x40657540"/>
        <function-ref name="setResistor" scoped="" ref="0x40657620"/>
        <function-ref name="toggle" scoped="" ref="0x40657700"/>
        <function-ref name="isOutput" scoped="" ref="0x406577e0"/>
        <function-ref name="getResistor" scoped="" ref="0x406578c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x406579a0"/>
        <function-ref name="get" scoped="" ref="0x40657a80"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40657b60"/>
        <function-ref name="getRaw" scoped="" ref="0x40657c40"/>
        <function-ref name="set" scoped="" ref="0x40657d20"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x40657e00"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40657ee0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40656090"/>
        <function-ref name="clr" scoped="" ref="0x40656170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x4065e280" loc="164:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x4065e280"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4065e458"/>
        <function-ref name="isInput" scoped="" ref="0x4065e538"/>
        <function-ref name="setResistor" scoped="" ref="0x4065e618"/>
        <function-ref name="toggle" scoped="" ref="0x4065e6f8"/>
        <function-ref name="isOutput" scoped="" ref="0x4065e7d8"/>
        <function-ref name="getResistor" scoped="" ref="0x4065e8b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4065e998"/>
        <function-ref name="get" scoped="" ref="0x4065ea78"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x4065eb58"/>
        <function-ref name="getRaw" scoped="" ref="0x4065ec38"/>
        <function-ref name="set" scoped="" ref="0x4065ed18"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x4065edf8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x4065eed8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x4065d090"/>
        <function-ref name="clr" scoped="" ref="0x4065d170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x40634928" loc="83:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x40634928"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40634b00"/>
        <function-ref name="isInput" scoped="" ref="0x40634be0"/>
        <function-ref name="setResistor" scoped="" ref="0x40634cc0"/>
        <function-ref name="toggle" scoped="" ref="0x40634da0"/>
        <function-ref name="isOutput" scoped="" ref="0x40634e80"/>
        <function-ref name="getResistor" scoped="" ref="0x40633010"/>
        <function-ref name="makeOutput" scoped="" ref="0x406330f0"/>
        <function-ref name="get" scoped="" ref="0x406331d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x406332b0"/>
        <function-ref name="getRaw" scoped="" ref="0x40633390"/>
        <function-ref name="set" scoped="" ref="0x40633470"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x40633550"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40633630"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40633790"/>
        <function-ref name="clr" scoped="" ref="0x40633870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x4063aa08" loc="96:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x4063aa08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4063abe0"/>
        <function-ref name="isInput" scoped="" ref="0x4063acc0"/>
        <function-ref name="setResistor" scoped="" ref="0x4063ada0"/>
        <function-ref name="toggle" scoped="" ref="0x4063ae80"/>
        <function-ref name="isOutput" scoped="" ref="0x40639010"/>
        <function-ref name="getResistor" scoped="" ref="0x406390f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x406391d0"/>
        <function-ref name="get" scoped="" ref="0x406392b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40639390"/>
        <function-ref name="getRaw" scoped="" ref="0x40639470"/>
        <function-ref name="set" scoped="" ref="0x40639550"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x40639630"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40639710"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40639870"/>
        <function-ref name="clr" scoped="" ref="0x40639950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x40643848" loc="107:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x40643848"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40643a20"/>
        <function-ref name="isInput" scoped="" ref="0x40643b00"/>
        <function-ref name="setResistor" scoped="" ref="0x40643be0"/>
        <function-ref name="toggle" scoped="" ref="0x40643cc0"/>
        <function-ref name="isOutput" scoped="" ref="0x40643da0"/>
        <function-ref name="getResistor" scoped="" ref="0x40643e80"/>
        <function-ref name="makeOutput" scoped="" ref="0x40642010"/>
        <function-ref name="get" scoped="" ref="0x406420f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x406421d0"/>
        <function-ref name="getRaw" scoped="" ref="0x406422b0"/>
        <function-ref name="set" scoped="" ref="0x40642390"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x40642470"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40642550"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x406426b0"/>
        <function-ref name="clr" scoped="" ref="0x40642790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x40613688" loc="55:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x40613688"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40613860"/>
        <function-ref name="isInput" scoped="" ref="0x40613940"/>
        <function-ref name="setResistor" scoped="" ref="0x40613a20"/>
        <function-ref name="toggle" scoped="" ref="0x40613b00"/>
        <function-ref name="isOutput" scoped="" ref="0x40613be0"/>
        <function-ref name="getResistor" scoped="" ref="0x40613cc0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40613da0"/>
        <function-ref name="get" scoped="" ref="0x40613e80"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40624010"/>
        <function-ref name="getRaw" scoped="" ref="0x406240f0"/>
        <function-ref name="set" scoped="" ref="0x406241d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x406242b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40624390"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x406244f0"/>
        <function-ref name="clr" scoped="" ref="0x406245d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x406454c8" loc="105:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x406454c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406456a0"/>
        <function-ref name="isInput" scoped="" ref="0x40645780"/>
        <function-ref name="setResistor" scoped="" ref="0x40645860"/>
        <function-ref name="toggle" scoped="" ref="0x40645940"/>
        <function-ref name="isOutput" scoped="" ref="0x40645a20"/>
        <function-ref name="getResistor" scoped="" ref="0x40645b00"/>
        <function-ref name="makeOutput" scoped="" ref="0x40645be0"/>
        <function-ref name="get" scoped="" ref="0x40645cc0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40645da0"/>
        <function-ref name="getRaw" scoped="" ref="0x40645e80"/>
        <function-ref name="set" scoped="" ref="0x40644010"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x406440f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x406441d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40644330"/>
        <function-ref name="clr" scoped="" ref="0x40644410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x40623a08" loc="60:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x40623a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40623be0"/>
        <function-ref name="isInput" scoped="" ref="0x40623cc0"/>
        <function-ref name="setResistor" scoped="" ref="0x40623da0"/>
        <function-ref name="toggle" scoped="" ref="0x40623e80"/>
        <function-ref name="isOutput" scoped="" ref="0x40622010"/>
        <function-ref name="getResistor" scoped="" ref="0x406220f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x406221d0"/>
        <function-ref name="get" scoped="" ref="0x406222b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40622390"/>
        <function-ref name="getRaw" scoped="" ref="0x40622470"/>
        <function-ref name="set" scoped="" ref="0x40622550"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x40622630"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40622710"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40622870"/>
        <function-ref name="clr" scoped="" ref="0x40622950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x4062abc8" loc="73:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x4062abc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4062ada0"/>
        <function-ref name="isInput" scoped="" ref="0x4062ae80"/>
        <function-ref name="setResistor" scoped="" ref="0x40629010"/>
        <function-ref name="toggle" scoped="" ref="0x406290f0"/>
        <function-ref name="isOutput" scoped="" ref="0x406291d0"/>
        <function-ref name="getResistor" scoped="" ref="0x406292b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40629390"/>
        <function-ref name="get" scoped="" ref="0x40629470"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40629550"/>
        <function-ref name="getRaw" scoped="" ref="0x40629630"/>
        <function-ref name="set" scoped="" ref="0x40629710"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x406297f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x406298d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40629a30"/>
        <function-ref name="clr" scoped="" ref="0x40629b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x40630e68" loc="86:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x40630e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4062f050"/>
        <function-ref name="isInput" scoped="" ref="0x4062f130"/>
        <function-ref name="setResistor" scoped="" ref="0x4062f210"/>
        <function-ref name="toggle" scoped="" ref="0x4062f2f0"/>
        <function-ref name="isOutput" scoped="" ref="0x4062f3d0"/>
        <function-ref name="getResistor" scoped="" ref="0x4062f4b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4062f590"/>
        <function-ref name="get" scoped="" ref="0x4062f670"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x4062f750"/>
        <function-ref name="getRaw" scoped="" ref="0x4062f830"/>
        <function-ref name="set" scoped="" ref="0x4062f910"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x4062f9f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x4062fad0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x4062fc30"/>
        <function-ref name="clr" scoped="" ref="0x4062fd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x40648010" loc="99:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x40648010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406481e8"/>
        <function-ref name="isInput" scoped="" ref="0x406482c8"/>
        <function-ref name="setResistor" scoped="" ref="0x406483a8"/>
        <function-ref name="toggle" scoped="" ref="0x40648488"/>
        <function-ref name="isOutput" scoped="" ref="0x40648568"/>
        <function-ref name="getResistor" scoped="" ref="0x40648648"/>
        <function-ref name="makeOutput" scoped="" ref="0x40648728"/>
        <function-ref name="get" scoped="" ref="0x40648808"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x406488e8"/>
        <function-ref name="getRaw" scoped="" ref="0x406489c8"/>
        <function-ref name="set" scoped="" ref="0x40648aa8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x40648b88"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40648c68"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40648dc8"/>
        <function-ref name="clr" scoped="" ref="0x40648ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x40640d88" loc="110:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x40640d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40651010"/>
        <function-ref name="isInput" scoped="" ref="0x406510f0"/>
        <function-ref name="setResistor" scoped="" ref="0x406511d0"/>
        <function-ref name="toggle" scoped="" ref="0x406512b0"/>
        <function-ref name="isOutput" scoped="" ref="0x40651390"/>
        <function-ref name="getResistor" scoped="" ref="0x40651470"/>
        <function-ref name="makeOutput" scoped="" ref="0x40651550"/>
        <function-ref name="get" scoped="" ref="0x40651630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40651710"/>
        <function-ref name="getRaw" scoped="" ref="0x406517f0"/>
        <function-ref name="set" scoped="" ref="0x406518d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x406519b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40651a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40651bf0"/>
        <function-ref name="clr" scoped="" ref="0x40651cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x4060ce68" loc="50:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x4060ce68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4060b050"/>
        <function-ref name="isInput" scoped="" ref="0x4060b130"/>
        <function-ref name="setResistor" scoped="" ref="0x4060b210"/>
        <function-ref name="toggle" scoped="" ref="0x4060b2f0"/>
        <function-ref name="isOutput" scoped="" ref="0x4060b3d0"/>
        <function-ref name="getResistor" scoped="" ref="0x4060b4b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4060b590"/>
        <function-ref name="get" scoped="" ref="0x4060b670"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x4060b750"/>
        <function-ref name="getRaw" scoped="" ref="0x4060b830"/>
        <function-ref name="set" scoped="" ref="0x4060b910"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x4060b9f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x4060bad0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x4060bc30"/>
        <function-ref name="clr" scoped="" ref="0x4060bd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x4061f010" loc="63:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x4061f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4061f1e8"/>
        <function-ref name="isInput" scoped="" ref="0x4061f2c8"/>
        <function-ref name="setResistor" scoped="" ref="0x4061f3a8"/>
        <function-ref name="toggle" scoped="" ref="0x4061f488"/>
        <function-ref name="isOutput" scoped="" ref="0x4061f568"/>
        <function-ref name="getResistor" scoped="" ref="0x4061f648"/>
        <function-ref name="makeOutput" scoped="" ref="0x4061f728"/>
        <function-ref name="get" scoped="" ref="0x4061f808"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x4061f8e8"/>
        <function-ref name="getRaw" scoped="" ref="0x4061f9c8"/>
        <function-ref name="set" scoped="" ref="0x4061faa8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x4061fb88"/>
        <function-ref name="isIOFunc" scoped="" ref="0x4061fc68"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x4061fdc8"/>
        <function-ref name="clr" scoped="" ref="0x4061fea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x40626178" loc="76:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x40626178"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40626350"/>
        <function-ref name="isInput" scoped="" ref="0x40626430"/>
        <function-ref name="setResistor" scoped="" ref="0x40626510"/>
        <function-ref name="toggle" scoped="" ref="0x406265f0"/>
        <function-ref name="isOutput" scoped="" ref="0x406266d0"/>
        <function-ref name="getResistor" scoped="" ref="0x406267b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40626890"/>
        <function-ref name="get" scoped="" ref="0x40626970"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40626a50"/>
        <function-ref name="getRaw" scoped="" ref="0x40626b30"/>
        <function-ref name="set" scoped="" ref="0x40626c10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x40626cf0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40626dd0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40625010"/>
        <function-ref name="clr" scoped="" ref="0x406250f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x4063e368" loc="89:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x4063e368"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4063e540"/>
        <function-ref name="isInput" scoped="" ref="0x4063e620"/>
        <function-ref name="setResistor" scoped="" ref="0x4063e700"/>
        <function-ref name="toggle" scoped="" ref="0x4063e7e0"/>
        <function-ref name="isOutput" scoped="" ref="0x4063e8c0"/>
        <function-ref name="getResistor" scoped="" ref="0x4063e9a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4063ea80"/>
        <function-ref name="get" scoped="" ref="0x4063eb60"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x4063ec40"/>
        <function-ref name="getRaw" scoped="" ref="0x4063ed20"/>
        <function-ref name="set" scoped="" ref="0x4063ee00"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x4063eee0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x4063d010"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x4063d170"/>
        <function-ref name="clr" scoped="" ref="0x4063d250"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x4064aba8" loc="148:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x4064aba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4064ad80"/>
        <function-ref name="isInput" scoped="" ref="0x4064ae60"/>
        <function-ref name="setResistor" scoped="" ref="0x40649010"/>
        <function-ref name="toggle" scoped="" ref="0x406490f0"/>
        <function-ref name="isOutput" scoped="" ref="0x406491d0"/>
        <function-ref name="getResistor" scoped="" ref="0x406492b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40649390"/>
        <function-ref name="get" scoped="" ref="0x40649470"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40649550"/>
        <function-ref name="getRaw" scoped="" ref="0x40649630"/>
        <function-ref name="set" scoped="" ref="0x40649710"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x406497f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x406498d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40649a30"/>
        <function-ref name="clr" scoped="" ref="0x40649b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x40663e58" loc="161:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x40663e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40662050"/>
        <function-ref name="isInput" scoped="" ref="0x40662130"/>
        <function-ref name="setResistor" scoped="" ref="0x40662210"/>
        <function-ref name="toggle" scoped="" ref="0x406622f0"/>
        <function-ref name="isOutput" scoped="" ref="0x406623d0"/>
        <function-ref name="getResistor" scoped="" ref="0x406624b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40662590"/>
        <function-ref name="get" scoped="" ref="0x40662670"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40662750"/>
        <function-ref name="getRaw" scoped="" ref="0x40662830"/>
        <function-ref name="set" scoped="" ref="0x40662910"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x406629f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40662ad0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40662c30"/>
        <function-ref name="clr" scoped="" ref="0x40662d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x4064ba00" loc="147:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x4064ba00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4064bbd8"/>
        <function-ref name="isInput" scoped="" ref="0x4064bcb8"/>
        <function-ref name="setResistor" scoped="" ref="0x4064bd98"/>
        <function-ref name="toggle" scoped="" ref="0x4064be78"/>
        <function-ref name="isOutput" scoped="" ref="0x4064a010"/>
        <function-ref name="getResistor" scoped="" ref="0x4064a0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4064a1d0"/>
        <function-ref name="get" scoped="" ref="0x4064a2b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x4064a390"/>
        <function-ref name="getRaw" scoped="" ref="0x4064a470"/>
        <function-ref name="set" scoped="" ref="0x4064a550"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x4064a630"/>
        <function-ref name="isIOFunc" scoped="" ref="0x4064a710"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x4064a870"/>
        <function-ref name="clr" scoped="" ref="0x4064a950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x4063c688" loc="94:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x4063c688"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4063c860"/>
        <function-ref name="isInput" scoped="" ref="0x4063c940"/>
        <function-ref name="setResistor" scoped="" ref="0x4063ca20"/>
        <function-ref name="toggle" scoped="" ref="0x4063cb00"/>
        <function-ref name="isOutput" scoped="" ref="0x4063cbe0"/>
        <function-ref name="getResistor" scoped="" ref="0x4063ccc0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4063cda0"/>
        <function-ref name="get" scoped="" ref="0x4063ce80"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x4063b010"/>
        <function-ref name="getRaw" scoped="" ref="0x4063b0f0"/>
        <function-ref name="set" scoped="" ref="0x4063b1d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x4063b2b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x4063b390"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x4063b4f0"/>
        <function-ref name="clr" scoped="" ref="0x4063b5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x4065b758" loc="168:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x4065b758"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4065b930"/>
        <function-ref name="isInput" scoped="" ref="0x4065ba10"/>
        <function-ref name="setResistor" scoped="" ref="0x4065baf0"/>
        <function-ref name="toggle" scoped="" ref="0x4065bbd0"/>
        <function-ref name="isOutput" scoped="" ref="0x4065bcb0"/>
        <function-ref name="getResistor" scoped="" ref="0x4065bd90"/>
        <function-ref name="makeOutput" scoped="" ref="0x4065be70"/>
        <function-ref name="get" scoped="" ref="0x4066e010"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x4066e0f0"/>
        <function-ref name="getRaw" scoped="" ref="0x4066e1d0"/>
        <function-ref name="set" scoped="" ref="0x4066e2b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x4066e390"/>
        <function-ref name="isIOFunc" scoped="" ref="0x4066e470"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x4066e5d0"/>
        <function-ref name="clr" scoped="" ref="0x4066e6b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x4066cca8" loc="172:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x4066cca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4066ce80"/>
        <function-ref name="isInput" scoped="" ref="0x4066b010"/>
        <function-ref name="setResistor" scoped="" ref="0x4066b0f0"/>
        <function-ref name="toggle" scoped="" ref="0x4066b1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4066b2b0"/>
        <function-ref name="getResistor" scoped="" ref="0x4066b390"/>
        <function-ref name="makeOutput" scoped="" ref="0x4066b470"/>
        <function-ref name="get" scoped="" ref="0x4066b550"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x4066b630"/>
        <function-ref name="getRaw" scoped="" ref="0x4066b710"/>
        <function-ref name="set" scoped="" ref="0x4066b7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x4066b8d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x4066b9b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x4066bb10"/>
        <function-ref name="clr" scoped="" ref="0x4066bbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x4064f168" loc="143:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x4064f168"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4064f540"/>
        <function-ref name="isInput" scoped="" ref="0x4064f620"/>
        <function-ref name="setResistor" scoped="" ref="0x4064f700"/>
        <function-ref name="toggle" scoped="" ref="0x4064f7e0"/>
        <function-ref name="isOutput" scoped="" ref="0x4064f8c0"/>
        <function-ref name="getResistor" scoped="" ref="0x4064f9a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4064fa80"/>
        <function-ref name="get" scoped="" ref="0x4064fb60"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x4064fc40"/>
        <function-ref name="getRaw" scoped="" ref="0x4064fd20"/>
        <function-ref name="set" scoped="" ref="0x4064fe00"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x4064fee0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x4064e010"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x4064e170"/>
        <function-ref name="clr" scoped="" ref="0x4064e250"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x406695d8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x406695d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406697b0"/>
        <function-ref name="isInput" scoped="" ref="0x40669890"/>
        <function-ref name="setResistor" scoped="" ref="0x40669970"/>
        <function-ref name="toggle" scoped="" ref="0x40669a50"/>
        <function-ref name="isOutput" scoped="" ref="0x40669b30"/>
        <function-ref name="getResistor" scoped="" ref="0x40669c10"/>
        <function-ref name="makeOutput" scoped="" ref="0x40669cf0"/>
        <function-ref name="get" scoped="" ref="0x40669dd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40669eb0"/>
        <function-ref name="getRaw" scoped="" ref="0x40668010"/>
        <function-ref name="set" scoped="" ref="0x406680f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x406681d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x406682b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40668410"/>
        <function-ref name="clr" scoped="" ref="0x406684f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4067ad68" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x4067ad68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40679010"/>
        <function-ref name="isInput" scoped="" ref="0x406790f0"/>
        <function-ref name="setResistor" scoped="" ref="0x406791d0"/>
        <function-ref name="toggle" scoped="" ref="0x406792b0"/>
        <function-ref name="isOutput" scoped="" ref="0x40679390"/>
        <function-ref name="getResistor" scoped="" ref="0x40679470"/>
        <function-ref name="makeOutput" scoped="" ref="0x40679550"/>
        <function-ref name="get" scoped="" ref="0x40679630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40679710"/>
        <function-ref name="getRaw" scoped="" ref="0x406797f0"/>
        <function-ref name="set" scoped="" ref="0x406798d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x406799b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40679a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40679bf0"/>
        <function-ref name="clr" scoped="" ref="0x40679cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4068b5c8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x4068b5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4068b7a0"/>
        <function-ref name="isInput" scoped="" ref="0x4068b880"/>
        <function-ref name="setResistor" scoped="" ref="0x4068b960"/>
        <function-ref name="toggle" scoped="" ref="0x4068ba40"/>
        <function-ref name="isOutput" scoped="" ref="0x4068bb20"/>
        <function-ref name="getResistor" scoped="" ref="0x4068bc00"/>
        <function-ref name="makeOutput" scoped="" ref="0x4068bce0"/>
        <function-ref name="get" scoped="" ref="0x4068bdc0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x4068bea0"/>
        <function-ref name="getRaw" scoped="" ref="0x4068a010"/>
        <function-ref name="set" scoped="" ref="0x4068a0f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x4068a1d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x4068a2b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x4068a410"/>
        <function-ref name="clr" scoped="" ref="0x4068a4f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40689d68" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x40689d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40688010"/>
        <function-ref name="isInput" scoped="" ref="0x406880f0"/>
        <function-ref name="setResistor" scoped="" ref="0x406881d0"/>
        <function-ref name="toggle" scoped="" ref="0x406882b0"/>
        <function-ref name="isOutput" scoped="" ref="0x40688390"/>
        <function-ref name="getResistor" scoped="" ref="0x40688470"/>
        <function-ref name="makeOutput" scoped="" ref="0x40688550"/>
        <function-ref name="get" scoped="" ref="0x40688630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40688710"/>
        <function-ref name="getRaw" scoped="" ref="0x406887f0"/>
        <function-ref name="set" scoped="" ref="0x406888d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x406889b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40688a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40688bf0"/>
        <function-ref name="clr" scoped="" ref="0x40688cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x406865c8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x406865c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406867a0"/>
        <function-ref name="isInput" scoped="" ref="0x40686880"/>
        <function-ref name="setResistor" scoped="" ref="0x40686960"/>
        <function-ref name="toggle" scoped="" ref="0x40686a40"/>
        <function-ref name="isOutput" scoped="" ref="0x40686b20"/>
        <function-ref name="getResistor" scoped="" ref="0x40686c00"/>
        <function-ref name="makeOutput" scoped="" ref="0x40686ce0"/>
        <function-ref name="get" scoped="" ref="0x40686dc0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40686ea0"/>
        <function-ref name="getRaw" scoped="" ref="0x40685010"/>
        <function-ref name="set" scoped="" ref="0x406850f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x406851d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x406852b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40685410"/>
        <function-ref name="clr" scoped="" ref="0x406854f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40684d68" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x40684d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40696010"/>
        <function-ref name="isInput" scoped="" ref="0x406960f0"/>
        <function-ref name="setResistor" scoped="" ref="0x406961d0"/>
        <function-ref name="toggle" scoped="" ref="0x406962b0"/>
        <function-ref name="isOutput" scoped="" ref="0x40696390"/>
        <function-ref name="getResistor" scoped="" ref="0x40696470"/>
        <function-ref name="makeOutput" scoped="" ref="0x40696550"/>
        <function-ref name="get" scoped="" ref="0x40696630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40696710"/>
        <function-ref name="getRaw" scoped="" ref="0x406967f0"/>
        <function-ref name="set" scoped="" ref="0x406968d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x406969b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40696a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40696bf0"/>
        <function-ref name="clr" scoped="" ref="0x40696cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x406945c8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x406945c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406947a0"/>
        <function-ref name="isInput" scoped="" ref="0x40694880"/>
        <function-ref name="setResistor" scoped="" ref="0x40694960"/>
        <function-ref name="toggle" scoped="" ref="0x40694a40"/>
        <function-ref name="isOutput" scoped="" ref="0x40694b20"/>
        <function-ref name="getResistor" scoped="" ref="0x40694c00"/>
        <function-ref name="makeOutput" scoped="" ref="0x40694ce0"/>
        <function-ref name="get" scoped="" ref="0x40694dc0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40694ea0"/>
        <function-ref name="getRaw" scoped="" ref="0x40693010"/>
        <function-ref name="set" scoped="" ref="0x406930f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x406931d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x406932b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40693410"/>
        <function-ref name="clr" scoped="" ref="0x406934f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40692d68" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x40692d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40691010"/>
        <function-ref name="isInput" scoped="" ref="0x406910f0"/>
        <function-ref name="setResistor" scoped="" ref="0x406911d0"/>
        <function-ref name="toggle" scoped="" ref="0x406912b0"/>
        <function-ref name="isOutput" scoped="" ref="0x40691390"/>
        <function-ref name="getResistor" scoped="" ref="0x40691470"/>
        <function-ref name="makeOutput" scoped="" ref="0x40691550"/>
        <function-ref name="get" scoped="" ref="0x40691630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40691710"/>
        <function-ref name="getRaw" scoped="" ref="0x406917f0"/>
        <function-ref name="set" scoped="" ref="0x406918d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x406919b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40691a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40691bf0"/>
        <function-ref name="clr" scoped="" ref="0x40691cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4068f5c8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x4068f5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4068f7a0"/>
        <function-ref name="isInput" scoped="" ref="0x4068f880"/>
        <function-ref name="setResistor" scoped="" ref="0x4068f960"/>
        <function-ref name="toggle" scoped="" ref="0x4068fa40"/>
        <function-ref name="isOutput" scoped="" ref="0x4068fb20"/>
        <function-ref name="getResistor" scoped="" ref="0x4068fc00"/>
        <function-ref name="makeOutput" scoped="" ref="0x4068fce0"/>
        <function-ref name="get" scoped="" ref="0x4068fdc0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x4068fea0"/>
        <function-ref name="getRaw" scoped="" ref="0x4068e010"/>
        <function-ref name="set" scoped="" ref="0x4068e0f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x4068e1d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x4068e2b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x4068e410"/>
        <function-ref name="clr" scoped="" ref="0x4068e4f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4068dd68" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x4068dd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406a0010"/>
        <function-ref name="isInput" scoped="" ref="0x406a00f0"/>
        <function-ref name="setResistor" scoped="" ref="0x406a01d0"/>
        <function-ref name="toggle" scoped="" ref="0x406a02b0"/>
        <function-ref name="isOutput" scoped="" ref="0x406a0390"/>
        <function-ref name="getResistor" scoped="" ref="0x406a0470"/>
        <function-ref name="makeOutput" scoped="" ref="0x406a0550"/>
        <function-ref name="get" scoped="" ref="0x406a0630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x406a0710"/>
        <function-ref name="getRaw" scoped="" ref="0x406a07f0"/>
        <function-ref name="set" scoped="" ref="0x406a08d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x406a09b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x406a0a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x406a0bf0"/>
        <function-ref name="clr" scoped="" ref="0x406a0cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4069e5c8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x4069e5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4069e7a0"/>
        <function-ref name="isInput" scoped="" ref="0x4069e880"/>
        <function-ref name="setResistor" scoped="" ref="0x4069e960"/>
        <function-ref name="toggle" scoped="" ref="0x4069ea40"/>
        <function-ref name="isOutput" scoped="" ref="0x4069eb20"/>
        <function-ref name="getResistor" scoped="" ref="0x4069ec00"/>
        <function-ref name="makeOutput" scoped="" ref="0x4069ece0"/>
        <function-ref name="get" scoped="" ref="0x4069edc0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x4069eea0"/>
        <function-ref name="getRaw" scoped="" ref="0x4069d010"/>
        <function-ref name="set" scoped="" ref="0x4069d0f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x4069d1d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x4069d2b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x4069d410"/>
        <function-ref name="clr" scoped="" ref="0x4069d4f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4069cd68" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x4069cd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4069b010"/>
        <function-ref name="isInput" scoped="" ref="0x4069b0f0"/>
        <function-ref name="setResistor" scoped="" ref="0x4069b1d0"/>
        <function-ref name="toggle" scoped="" ref="0x4069b2b0"/>
        <function-ref name="isOutput" scoped="" ref="0x4069b390"/>
        <function-ref name="getResistor" scoped="" ref="0x4069b470"/>
        <function-ref name="makeOutput" scoped="" ref="0x4069b550"/>
        <function-ref name="get" scoped="" ref="0x4069b630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x4069b710"/>
        <function-ref name="getRaw" scoped="" ref="0x4069b7f0"/>
        <function-ref name="set" scoped="" ref="0x4069b8d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x4069b9b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x4069ba90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x4069bbf0"/>
        <function-ref name="clr" scoped="" ref="0x4069bcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x406996f8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x406996f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406998d0"/>
        <function-ref name="isInput" scoped="" ref="0x406999b0"/>
        <function-ref name="setResistor" scoped="" ref="0x40699a90"/>
        <function-ref name="toggle" scoped="" ref="0x40699b70"/>
        <function-ref name="isOutput" scoped="" ref="0x40699c50"/>
        <function-ref name="getResistor" scoped="" ref="0x40699d30"/>
        <function-ref name="makeOutput" scoped="" ref="0x40699e10"/>
        <function-ref name="get" scoped="" ref="0x40699ef0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40698010"/>
        <function-ref name="getRaw" scoped="" ref="0x406980f0"/>
        <function-ref name="set" scoped="" ref="0x406981d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x406982b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40698390"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x406984f0"/>
        <function-ref name="clr" scoped="" ref="0x406985d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40697df8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x40697df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406aa010"/>
        <function-ref name="isInput" scoped="" ref="0x406aa0f0"/>
        <function-ref name="setResistor" scoped="" ref="0x406aa1d0"/>
        <function-ref name="toggle" scoped="" ref="0x406aa2b0"/>
        <function-ref name="isOutput" scoped="" ref="0x406aa390"/>
        <function-ref name="getResistor" scoped="" ref="0x406aa470"/>
        <function-ref name="makeOutput" scoped="" ref="0x406aa550"/>
        <function-ref name="get" scoped="" ref="0x406aa630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x406aa710"/>
        <function-ref name="getRaw" scoped="" ref="0x406aa7f0"/>
        <function-ref name="set" scoped="" ref="0x406aa8d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x406aa9b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x406aaa90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x406aabf0"/>
        <function-ref name="clr" scoped="" ref="0x406aacd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x406a85c8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x406a85c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406a87a0"/>
        <function-ref name="isInput" scoped="" ref="0x406a8880"/>
        <function-ref name="setResistor" scoped="" ref="0x406a8960"/>
        <function-ref name="toggle" scoped="" ref="0x406a8a40"/>
        <function-ref name="isOutput" scoped="" ref="0x406a8b20"/>
        <function-ref name="getResistor" scoped="" ref="0x406a8c00"/>
        <function-ref name="makeOutput" scoped="" ref="0x406a8ce0"/>
        <function-ref name="get" scoped="" ref="0x406a8dc0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x406a8ea0"/>
        <function-ref name="getRaw" scoped="" ref="0x406a7010"/>
        <function-ref name="set" scoped="" ref="0x406a70f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x406a71d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x406a72b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x406a7410"/>
        <function-ref name="clr" scoped="" ref="0x406a74f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x406a6d68" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x406a6d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406a5010"/>
        <function-ref name="isInput" scoped="" ref="0x406a50f0"/>
        <function-ref name="setResistor" scoped="" ref="0x406a51d0"/>
        <function-ref name="toggle" scoped="" ref="0x406a52b0"/>
        <function-ref name="isOutput" scoped="" ref="0x406a5390"/>
        <function-ref name="getResistor" scoped="" ref="0x406a5470"/>
        <function-ref name="makeOutput" scoped="" ref="0x406a5550"/>
        <function-ref name="get" scoped="" ref="0x406a5630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x406a5710"/>
        <function-ref name="getRaw" scoped="" ref="0x406a57f0"/>
        <function-ref name="set" scoped="" ref="0x406a58d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x406a59b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x406a5a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x406a5bf0"/>
        <function-ref name="clr" scoped="" ref="0x406a5cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x406a35c8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x406a35c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406a37a0"/>
        <function-ref name="isInput" scoped="" ref="0x406a3880"/>
        <function-ref name="setResistor" scoped="" ref="0x406a3960"/>
        <function-ref name="toggle" scoped="" ref="0x406a3a40"/>
        <function-ref name="isOutput" scoped="" ref="0x406a3b20"/>
        <function-ref name="getResistor" scoped="" ref="0x406a3c00"/>
        <function-ref name="makeOutput" scoped="" ref="0x406a3ce0"/>
        <function-ref name="get" scoped="" ref="0x406a3dc0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x406a3ea0"/>
        <function-ref name="getRaw" scoped="" ref="0x406a2010"/>
        <function-ref name="set" scoped="" ref="0x406a20f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x406a21d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x406a22b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x406a2410"/>
        <function-ref name="clr" scoped="" ref="0x406a24f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x406a1d68" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x406a1d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406b4010"/>
        <function-ref name="isInput" scoped="" ref="0x406b40f0"/>
        <function-ref name="setResistor" scoped="" ref="0x406b41d0"/>
        <function-ref name="toggle" scoped="" ref="0x406b42b0"/>
        <function-ref name="isOutput" scoped="" ref="0x406b4390"/>
        <function-ref name="getResistor" scoped="" ref="0x406b4470"/>
        <function-ref name="makeOutput" scoped="" ref="0x406b4550"/>
        <function-ref name="get" scoped="" ref="0x406b4630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x406b4710"/>
        <function-ref name="getRaw" scoped="" ref="0x406b47f0"/>
        <function-ref name="set" scoped="" ref="0x406b48d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x406b49b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x406b4a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x406b4bf0"/>
        <function-ref name="clr" scoped="" ref="0x406b4cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x406b25c8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x406b25c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406b27a0"/>
        <function-ref name="isInput" scoped="" ref="0x406b2880"/>
        <function-ref name="setResistor" scoped="" ref="0x406b2960"/>
        <function-ref name="toggle" scoped="" ref="0x406b2a40"/>
        <function-ref name="isOutput" scoped="" ref="0x406b2b20"/>
        <function-ref name="getResistor" scoped="" ref="0x406b2c00"/>
        <function-ref name="makeOutput" scoped="" ref="0x406b2ce0"/>
        <function-ref name="get" scoped="" ref="0x406b2dc0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x406b2ea0"/>
        <function-ref name="getRaw" scoped="" ref="0x406b0010"/>
        <function-ref name="set" scoped="" ref="0x406b00f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x406b01d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x406b02b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x406b0410"/>
        <function-ref name="clr" scoped="" ref="0x406b04f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x406afd68" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x406afd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406ae010"/>
        <function-ref name="isInput" scoped="" ref="0x406ae0f0"/>
        <function-ref name="setResistor" scoped="" ref="0x406ae1d0"/>
        <function-ref name="toggle" scoped="" ref="0x406ae2b0"/>
        <function-ref name="isOutput" scoped="" ref="0x406ae390"/>
        <function-ref name="getResistor" scoped="" ref="0x406ae470"/>
        <function-ref name="makeOutput" scoped="" ref="0x406ae550"/>
        <function-ref name="get" scoped="" ref="0x406ae630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x406ae710"/>
        <function-ref name="getRaw" scoped="" ref="0x406ae7f0"/>
        <function-ref name="set" scoped="" ref="0x406ae8d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x406ae9b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x406aea90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x406aebf0"/>
        <function-ref name="clr" scoped="" ref="0x406aecd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x406ac5c8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x406ac5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406ac7a0"/>
        <function-ref name="isInput" scoped="" ref="0x406ac880"/>
        <function-ref name="setResistor" scoped="" ref="0x406ac960"/>
        <function-ref name="toggle" scoped="" ref="0x406aca40"/>
        <function-ref name="isOutput" scoped="" ref="0x406acb20"/>
        <function-ref name="getResistor" scoped="" ref="0x406acc00"/>
        <function-ref name="makeOutput" scoped="" ref="0x406acce0"/>
        <function-ref name="get" scoped="" ref="0x406acdc0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x406acea0"/>
        <function-ref name="getRaw" scoped="" ref="0x406ab010"/>
        <function-ref name="set" scoped="" ref="0x406ab0f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x406ab1d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x406ab2b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x406ab410"/>
        <function-ref name="clr" scoped="" ref="0x406ab4f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x406bed68" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x406bed68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406bd010"/>
        <function-ref name="isInput" scoped="" ref="0x406bd0f0"/>
        <function-ref name="setResistor" scoped="" ref="0x406bd1d0"/>
        <function-ref name="toggle" scoped="" ref="0x406bd2b0"/>
        <function-ref name="isOutput" scoped="" ref="0x406bd390"/>
        <function-ref name="getResistor" scoped="" ref="0x406bd470"/>
        <function-ref name="makeOutput" scoped="" ref="0x406bd550"/>
        <function-ref name="get" scoped="" ref="0x406bd630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x406bd710"/>
        <function-ref name="getRaw" scoped="" ref="0x406bd7f0"/>
        <function-ref name="set" scoped="" ref="0x406bd8d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x406bd9b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x406bda90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x406bdbf0"/>
        <function-ref name="clr" scoped="" ref="0x406bdcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x406bb5c8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x406bb5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406bb7a0"/>
        <function-ref name="isInput" scoped="" ref="0x406bb880"/>
        <function-ref name="setResistor" scoped="" ref="0x406bb960"/>
        <function-ref name="toggle" scoped="" ref="0x406bba40"/>
        <function-ref name="isOutput" scoped="" ref="0x406bbb20"/>
        <function-ref name="getResistor" scoped="" ref="0x406bbc00"/>
        <function-ref name="makeOutput" scoped="" ref="0x406bbce0"/>
        <function-ref name="get" scoped="" ref="0x406bbdc0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x406bbea0"/>
        <function-ref name="getRaw" scoped="" ref="0x406ba010"/>
        <function-ref name="set" scoped="" ref="0x406ba0f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x406ba1d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x406ba2b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x406ba410"/>
        <function-ref name="clr" scoped="" ref="0x406ba4f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x406b9d68" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x406b9d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406b8010"/>
        <function-ref name="isInput" scoped="" ref="0x406b80f0"/>
        <function-ref name="setResistor" scoped="" ref="0x406b81d0"/>
        <function-ref name="toggle" scoped="" ref="0x406b82b0"/>
        <function-ref name="isOutput" scoped="" ref="0x406b8390"/>
        <function-ref name="getResistor" scoped="" ref="0x406b8470"/>
        <function-ref name="makeOutput" scoped="" ref="0x406b8550"/>
        <function-ref name="get" scoped="" ref="0x406b8630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x406b8710"/>
        <function-ref name="getRaw" scoped="" ref="0x406b87f0"/>
        <function-ref name="set" scoped="" ref="0x406b88d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x406b89b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x406b8a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x406b8bf0"/>
        <function-ref name="clr" scoped="" ref="0x406b8cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x406b66f8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x406b66f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406b68d0"/>
        <function-ref name="isInput" scoped="" ref="0x406b69b0"/>
        <function-ref name="setResistor" scoped="" ref="0x406b6a90"/>
        <function-ref name="toggle" scoped="" ref="0x406b6b70"/>
        <function-ref name="isOutput" scoped="" ref="0x406b6c50"/>
        <function-ref name="getResistor" scoped="" ref="0x406b6d30"/>
        <function-ref name="makeOutput" scoped="" ref="0x406b6e10"/>
        <function-ref name="get" scoped="" ref="0x406b6ef0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x406b5010"/>
        <function-ref name="getRaw" scoped="" ref="0x406b50f0"/>
        <function-ref name="set" scoped="" ref="0x406b51d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x406b52b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x406b5390"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x406b54f0"/>
        <function-ref name="clr" scoped="" ref="0x406b55d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x406c8df8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x406c8df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406c7010"/>
        <function-ref name="isInput" scoped="" ref="0x406c70f0"/>
        <function-ref name="setResistor" scoped="" ref="0x406c71d0"/>
        <function-ref name="toggle" scoped="" ref="0x406c72b0"/>
        <function-ref name="isOutput" scoped="" ref="0x406c7390"/>
        <function-ref name="getResistor" scoped="" ref="0x406c7470"/>
        <function-ref name="makeOutput" scoped="" ref="0x406c7550"/>
        <function-ref name="get" scoped="" ref="0x406c7630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x406c7710"/>
        <function-ref name="getRaw" scoped="" ref="0x406c77f0"/>
        <function-ref name="set" scoped="" ref="0x406c78d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x406c79b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x406c7a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x406c7bf0"/>
        <function-ref name="clr" scoped="" ref="0x406c7cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x406c55c8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x406c55c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406c57a0"/>
        <function-ref name="isInput" scoped="" ref="0x406c5880"/>
        <function-ref name="setResistor" scoped="" ref="0x406c5960"/>
        <function-ref name="toggle" scoped="" ref="0x406c5a40"/>
        <function-ref name="isOutput" scoped="" ref="0x406c5b20"/>
        <function-ref name="getResistor" scoped="" ref="0x406c5c00"/>
        <function-ref name="makeOutput" scoped="" ref="0x406c5ce0"/>
        <function-ref name="get" scoped="" ref="0x406c5dc0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x406c5ea0"/>
        <function-ref name="getRaw" scoped="" ref="0x406c4010"/>
        <function-ref name="set" scoped="" ref="0x406c40f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x406c41d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x406c42b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x406c4410"/>
        <function-ref name="clr" scoped="" ref="0x406c44f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x406c3d68" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x406c3d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406c2010"/>
        <function-ref name="isInput" scoped="" ref="0x406c20f0"/>
        <function-ref name="setResistor" scoped="" ref="0x406c21d0"/>
        <function-ref name="toggle" scoped="" ref="0x406c22b0"/>
        <function-ref name="isOutput" scoped="" ref="0x406c2390"/>
        <function-ref name="getResistor" scoped="" ref="0x406c2470"/>
        <function-ref name="makeOutput" scoped="" ref="0x406c2550"/>
        <function-ref name="get" scoped="" ref="0x406c2630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x406c2710"/>
        <function-ref name="getRaw" scoped="" ref="0x406c27f0"/>
        <function-ref name="set" scoped="" ref="0x406c28d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x406c29b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x406c2a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x406c2bf0"/>
        <function-ref name="clr" scoped="" ref="0x406c2cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x406c05c8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x406c05c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406c07a0"/>
        <function-ref name="isInput" scoped="" ref="0x406c0880"/>
        <function-ref name="setResistor" scoped="" ref="0x406c0960"/>
        <function-ref name="toggle" scoped="" ref="0x406c0a40"/>
        <function-ref name="isOutput" scoped="" ref="0x406c0b20"/>
        <function-ref name="getResistor" scoped="" ref="0x406c0c00"/>
        <function-ref name="makeOutput" scoped="" ref="0x406c0ce0"/>
        <function-ref name="get" scoped="" ref="0x406c0dc0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x406c0ea0"/>
        <function-ref name="getRaw" scoped="" ref="0x406bf010"/>
        <function-ref name="set" scoped="" ref="0x406bf0f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x406bf1d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x406bf2b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x406bf410"/>
        <function-ref name="clr" scoped="" ref="0x406bf4f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x406d2d68" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x406d2d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406d1010"/>
        <function-ref name="isInput" scoped="" ref="0x406d10f0"/>
        <function-ref name="setResistor" scoped="" ref="0x406d11d0"/>
        <function-ref name="toggle" scoped="" ref="0x406d12b0"/>
        <function-ref name="isOutput" scoped="" ref="0x406d1390"/>
        <function-ref name="getResistor" scoped="" ref="0x406d1470"/>
        <function-ref name="makeOutput" scoped="" ref="0x406d1550"/>
        <function-ref name="get" scoped="" ref="0x406d1630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x406d1710"/>
        <function-ref name="getRaw" scoped="" ref="0x406d17f0"/>
        <function-ref name="set" scoped="" ref="0x406d18d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x406d19b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x406d1a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x406d1bf0"/>
        <function-ref name="clr" scoped="" ref="0x406d1cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x406cf5c8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x406cf5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406cf7a0"/>
        <function-ref name="isInput" scoped="" ref="0x406cf880"/>
        <function-ref name="setResistor" scoped="" ref="0x406cf960"/>
        <function-ref name="toggle" scoped="" ref="0x406cfa40"/>
        <function-ref name="isOutput" scoped="" ref="0x406cfb20"/>
        <function-ref name="getResistor" scoped="" ref="0x406cfc00"/>
        <function-ref name="makeOutput" scoped="" ref="0x406cfce0"/>
        <function-ref name="get" scoped="" ref="0x406cfdc0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x406cfea0"/>
        <function-ref name="getRaw" scoped="" ref="0x406ce010"/>
        <function-ref name="set" scoped="" ref="0x406ce0f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x406ce1d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x406ce2b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x406ce410"/>
        <function-ref name="clr" scoped="" ref="0x406ce4f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x406cdd68" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x406cdd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406cb010"/>
        <function-ref name="isInput" scoped="" ref="0x406cb0f0"/>
        <function-ref name="setResistor" scoped="" ref="0x406cb1d0"/>
        <function-ref name="toggle" scoped="" ref="0x406cb2b0"/>
        <function-ref name="isOutput" scoped="" ref="0x406cb390"/>
        <function-ref name="getResistor" scoped="" ref="0x406cb470"/>
        <function-ref name="makeOutput" scoped="" ref="0x406cb550"/>
        <function-ref name="get" scoped="" ref="0x406cb630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x406cb710"/>
        <function-ref name="getRaw" scoped="" ref="0x406cb7f0"/>
        <function-ref name="set" scoped="" ref="0x406cb8d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x406cb9b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x406cba90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x406cbbf0"/>
        <function-ref name="clr" scoped="" ref="0x406cbcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x406c95c8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x406c95c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406c97a0"/>
        <function-ref name="isInput" scoped="" ref="0x406c9880"/>
        <function-ref name="setResistor" scoped="" ref="0x406c9960"/>
        <function-ref name="toggle" scoped="" ref="0x406c9a40"/>
        <function-ref name="isOutput" scoped="" ref="0x406c9b20"/>
        <function-ref name="getResistor" scoped="" ref="0x406c9c00"/>
        <function-ref name="makeOutput" scoped="" ref="0x406c9ce0"/>
        <function-ref name="get" scoped="" ref="0x406c9dc0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x406c9ea0"/>
        <function-ref name="getRaw" scoped="" ref="0x406dc010"/>
        <function-ref name="set" scoped="" ref="0x406dc0f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x406dc1d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x406dc2b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x406dc410"/>
        <function-ref name="clr" scoped="" ref="0x406dc4f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x406dbd68" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x406dbd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406da010"/>
        <function-ref name="isInput" scoped="" ref="0x406da0f0"/>
        <function-ref name="setResistor" scoped="" ref="0x406da1d0"/>
        <function-ref name="toggle" scoped="" ref="0x406da2b0"/>
        <function-ref name="isOutput" scoped="" ref="0x406da390"/>
        <function-ref name="getResistor" scoped="" ref="0x406da470"/>
        <function-ref name="makeOutput" scoped="" ref="0x406da550"/>
        <function-ref name="get" scoped="" ref="0x406da630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x406da710"/>
        <function-ref name="getRaw" scoped="" ref="0x406da7f0"/>
        <function-ref name="set" scoped="" ref="0x406da8d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x406da9b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x406daa90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x406dabf0"/>
        <function-ref name="clr" scoped="" ref="0x406dacd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x406d85c8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x406d85c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406d87a0"/>
        <function-ref name="isInput" scoped="" ref="0x406d8880"/>
        <function-ref name="setResistor" scoped="" ref="0x406d8960"/>
        <function-ref name="toggle" scoped="" ref="0x406d8a40"/>
        <function-ref name="isOutput" scoped="" ref="0x406d8b20"/>
        <function-ref name="getResistor" scoped="" ref="0x406d8c00"/>
        <function-ref name="makeOutput" scoped="" ref="0x406d8ce0"/>
        <function-ref name="get" scoped="" ref="0x406d8dc0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x406d8ea0"/>
        <function-ref name="getRaw" scoped="" ref="0x406d7010"/>
        <function-ref name="set" scoped="" ref="0x406d70f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x406d71d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x406d72b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x406d7410"/>
        <function-ref name="clr" scoped="" ref="0x406d74f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x406d6d68" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x406d6d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406d5010"/>
        <function-ref name="isInput" scoped="" ref="0x406d50f0"/>
        <function-ref name="setResistor" scoped="" ref="0x406d51d0"/>
        <function-ref name="toggle" scoped="" ref="0x406d52b0"/>
        <function-ref name="isOutput" scoped="" ref="0x406d5390"/>
        <function-ref name="getResistor" scoped="" ref="0x406d5470"/>
        <function-ref name="makeOutput" scoped="" ref="0x406d5550"/>
        <function-ref name="get" scoped="" ref="0x406d5630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x406d5710"/>
        <function-ref name="getRaw" scoped="" ref="0x406d57f0"/>
        <function-ref name="set" scoped="" ref="0x406d58d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x406d59b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x406d5a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x406d5bf0"/>
        <function-ref name="clr" scoped="" ref="0x406d5cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x406d35c8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x406d35c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406d37a0"/>
        <function-ref name="isInput" scoped="" ref="0x406d3880"/>
        <function-ref name="setResistor" scoped="" ref="0x406d3960"/>
        <function-ref name="toggle" scoped="" ref="0x406d3a40"/>
        <function-ref name="isOutput" scoped="" ref="0x406d3b20"/>
        <function-ref name="getResistor" scoped="" ref="0x406d3c00"/>
        <function-ref name="makeOutput" scoped="" ref="0x406d3ce0"/>
        <function-ref name="get" scoped="" ref="0x406d3dc0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x406d3ea0"/>
        <function-ref name="getRaw" scoped="" ref="0x406e7010"/>
        <function-ref name="set" scoped="" ref="0x406e70f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x406e71d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x406e72b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x406e7410"/>
        <function-ref name="clr" scoped="" ref="0x406e74f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x406e6d68" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x406e6d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406e5010"/>
        <function-ref name="isInput" scoped="" ref="0x406e50f0"/>
        <function-ref name="setResistor" scoped="" ref="0x406e51d0"/>
        <function-ref name="toggle" scoped="" ref="0x406e52b0"/>
        <function-ref name="isOutput" scoped="" ref="0x406e5390"/>
        <function-ref name="getResistor" scoped="" ref="0x406e5470"/>
        <function-ref name="makeOutput" scoped="" ref="0x406e5550"/>
        <function-ref name="get" scoped="" ref="0x406e5630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x406e5710"/>
        <function-ref name="getRaw" scoped="" ref="0x406e57f0"/>
        <function-ref name="set" scoped="" ref="0x406e58d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x406e59b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x406e5a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x406e5bf0"/>
        <function-ref name="clr" scoped="" ref="0x406e5cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x406e35c8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x406e35c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406e37a0"/>
        <function-ref name="isInput" scoped="" ref="0x406e3880"/>
        <function-ref name="setResistor" scoped="" ref="0x406e3960"/>
        <function-ref name="toggle" scoped="" ref="0x406e3a40"/>
        <function-ref name="isOutput" scoped="" ref="0x406e3b20"/>
        <function-ref name="getResistor" scoped="" ref="0x406e3c00"/>
        <function-ref name="makeOutput" scoped="" ref="0x406e3ce0"/>
        <function-ref name="get" scoped="" ref="0x406e3dc0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x406e3ea0"/>
        <function-ref name="getRaw" scoped="" ref="0x406e2010"/>
        <function-ref name="set" scoped="" ref="0x406e20f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x406e21d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x406e22b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x406e2410"/>
        <function-ref name="clr" scoped="" ref="0x406e24f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x406e1d68" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x406e1d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406e0010"/>
        <function-ref name="isInput" scoped="" ref="0x406e00f0"/>
        <function-ref name="setResistor" scoped="" ref="0x406e01d0"/>
        <function-ref name="toggle" scoped="" ref="0x406e02b0"/>
        <function-ref name="isOutput" scoped="" ref="0x406e0390"/>
        <function-ref name="getResistor" scoped="" ref="0x406e0470"/>
        <function-ref name="makeOutput" scoped="" ref="0x406e0550"/>
        <function-ref name="get" scoped="" ref="0x406e0630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x406e0710"/>
        <function-ref name="getRaw" scoped="" ref="0x406e07f0"/>
        <function-ref name="set" scoped="" ref="0x406e08d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x406e09b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x406e0a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x406e0bf0"/>
        <function-ref name="clr" scoped="" ref="0x406e0cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x406de5c8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x406de5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406de7a0"/>
        <function-ref name="isInput" scoped="" ref="0x406de880"/>
        <function-ref name="setResistor" scoped="" ref="0x406de960"/>
        <function-ref name="toggle" scoped="" ref="0x406dea40"/>
        <function-ref name="isOutput" scoped="" ref="0x406deb20"/>
        <function-ref name="getResistor" scoped="" ref="0x406dec00"/>
        <function-ref name="makeOutput" scoped="" ref="0x406dece0"/>
        <function-ref name="get" scoped="" ref="0x406dedc0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x406deea0"/>
        <function-ref name="getRaw" scoped="" ref="0x406dd010"/>
        <function-ref name="set" scoped="" ref="0x406dd0f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x406dd1d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x406dd2b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x406dd410"/>
        <function-ref name="clr" scoped="" ref="0x406dd4f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x406f2d68" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x406f2d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406f1010"/>
        <function-ref name="isInput" scoped="" ref="0x406f10f0"/>
        <function-ref name="setResistor" scoped="" ref="0x406f11d0"/>
        <function-ref name="toggle" scoped="" ref="0x406f12b0"/>
        <function-ref name="isOutput" scoped="" ref="0x406f1390"/>
        <function-ref name="getResistor" scoped="" ref="0x406f1470"/>
        <function-ref name="makeOutput" scoped="" ref="0x406f1550"/>
        <function-ref name="get" scoped="" ref="0x406f1630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x406f1710"/>
        <function-ref name="getRaw" scoped="" ref="0x406f17f0"/>
        <function-ref name="set" scoped="" ref="0x406f18d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x406f19b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x406f1a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x406f1bf0"/>
        <function-ref name="clr" scoped="" ref="0x406f1cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x406ef5c8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x406ef5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406ef7a0"/>
        <function-ref name="isInput" scoped="" ref="0x406ef880"/>
        <function-ref name="setResistor" scoped="" ref="0x406ef960"/>
        <function-ref name="toggle" scoped="" ref="0x406efa40"/>
        <function-ref name="isOutput" scoped="" ref="0x406efb20"/>
        <function-ref name="getResistor" scoped="" ref="0x406efc00"/>
        <function-ref name="makeOutput" scoped="" ref="0x406efce0"/>
        <function-ref name="get" scoped="" ref="0x406efdc0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x406efea0"/>
        <function-ref name="getRaw" scoped="" ref="0x406ee010"/>
        <function-ref name="set" scoped="" ref="0x406ee0f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x406ee1d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x406ee2b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x406ee410"/>
        <function-ref name="clr" scoped="" ref="0x406ee4f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x406edd68" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x406edd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406ec010"/>
        <function-ref name="isInput" scoped="" ref="0x406ec0f0"/>
        <function-ref name="setResistor" scoped="" ref="0x406ec1d0"/>
        <function-ref name="toggle" scoped="" ref="0x406ec2b0"/>
        <function-ref name="isOutput" scoped="" ref="0x406ec390"/>
        <function-ref name="getResistor" scoped="" ref="0x406ec470"/>
        <function-ref name="makeOutput" scoped="" ref="0x406ec550"/>
        <function-ref name="get" scoped="" ref="0x406ec630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x406ec710"/>
        <function-ref name="getRaw" scoped="" ref="0x406ec7f0"/>
        <function-ref name="set" scoped="" ref="0x406ec8d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x406ec9b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x406eca90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x406ecbf0"/>
        <function-ref name="clr" scoped="" ref="0x406eccd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x406ea5c8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x406ea5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406ea7a0"/>
        <function-ref name="isInput" scoped="" ref="0x406ea880"/>
        <function-ref name="setResistor" scoped="" ref="0x406ea960"/>
        <function-ref name="toggle" scoped="" ref="0x406eaa40"/>
        <function-ref name="isOutput" scoped="" ref="0x406eab20"/>
        <function-ref name="getResistor" scoped="" ref="0x406eac00"/>
        <function-ref name="makeOutput" scoped="" ref="0x406eace0"/>
        <function-ref name="get" scoped="" ref="0x406eadc0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x406eaea0"/>
        <function-ref name="getRaw" scoped="" ref="0x406e8010"/>
        <function-ref name="set" scoped="" ref="0x406e80f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x406e81d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x406e82b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x406e8410"/>
        <function-ref name="clr" scoped="" ref="0x406e84f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x406fdd68" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x406fdd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406fc010"/>
        <function-ref name="isInput" scoped="" ref="0x406fc0f0"/>
        <function-ref name="setResistor" scoped="" ref="0x406fc1d0"/>
        <function-ref name="toggle" scoped="" ref="0x406fc2b0"/>
        <function-ref name="isOutput" scoped="" ref="0x406fc390"/>
        <function-ref name="getResistor" scoped="" ref="0x406fc470"/>
        <function-ref name="makeOutput" scoped="" ref="0x406fc550"/>
        <function-ref name="get" scoped="" ref="0x406fc630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x406fc710"/>
        <function-ref name="getRaw" scoped="" ref="0x406fc7f0"/>
        <function-ref name="set" scoped="" ref="0x406fc8d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x406fc9b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x406fca90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x406fcbf0"/>
        <function-ref name="clr" scoped="" ref="0x406fccd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x406fa5c8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x406fa5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406fa7a0"/>
        <function-ref name="isInput" scoped="" ref="0x406fa880"/>
        <function-ref name="setResistor" scoped="" ref="0x406fa960"/>
        <function-ref name="toggle" scoped="" ref="0x406faa40"/>
        <function-ref name="isOutput" scoped="" ref="0x406fab20"/>
        <function-ref name="getResistor" scoped="" ref="0x406fac00"/>
        <function-ref name="makeOutput" scoped="" ref="0x406face0"/>
        <function-ref name="get" scoped="" ref="0x406fadc0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x406faea0"/>
        <function-ref name="getRaw" scoped="" ref="0x406f9010"/>
        <function-ref name="set" scoped="" ref="0x406f90f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x406f91d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x406f92b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x406f9410"/>
        <function-ref name="clr" scoped="" ref="0x406f94f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x406f8d68" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x406f8d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406f7010"/>
        <function-ref name="isInput" scoped="" ref="0x406f70f0"/>
        <function-ref name="setResistor" scoped="" ref="0x406f71d0"/>
        <function-ref name="toggle" scoped="" ref="0x406f72b0"/>
        <function-ref name="isOutput" scoped="" ref="0x406f7390"/>
        <function-ref name="getResistor" scoped="" ref="0x406f7470"/>
        <function-ref name="makeOutput" scoped="" ref="0x406f7550"/>
        <function-ref name="get" scoped="" ref="0x406f7630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x406f7710"/>
        <function-ref name="getRaw" scoped="" ref="0x406f77f0"/>
        <function-ref name="set" scoped="" ref="0x406f78d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x406f79b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x406f7a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x406f7bf0"/>
        <function-ref name="clr" scoped="" ref="0x406f7cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x406f68a8" loc="42:../../tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x406f68a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x406f6a80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x40707a78" loc="6:../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x40707a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40707c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40707288" loc="4:../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x40707288"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40707460"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x40707698" loc="5:../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x40707698"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40707870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x40707e58" loc="7:../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x40707e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40706050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x406f37d8" loc="2:../../tos/platforms/telosb/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x406f37d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x406f39b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x407083d8" loc="39:../../tos/platforms/telosb/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x407083d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x407085b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x4071a310" loc="40:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x4071a310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x4071ab08"/>
        <function-ref name="initTimerB" scoped="" ref="0x4071a5c8"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x4071a6a8"/>
        <function-ref name="initTimerA" scoped="" ref="0x4071a788"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x4071a4e8"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x4071a868"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x4071a948"/>
        <function-ref name="initClocks" scoped="" ref="0x4071aa28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40708c28" loc="39:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x40708c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40708e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x407275f0" loc="46:../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x407275f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x40727de8"/>
        <function-ref name="initTimerB" scoped="" ref="0x407278a8"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x40727988"/>
        <function-ref name="initTimerA" scoped="" ref="0x40727a68"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x407277c8"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x40727b48"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x40727c28"/>
        <function-ref name="initClocks" scoped="" ref="0x40727d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x40726010" loc="47:../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x40726010"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x407261e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40727220" loc="45:../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x40727220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x407273f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x40746010" loc="42:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x40746010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x407461e8"/>
        <function-ref name="getControl" scoped="" ref="0x407462c8"/>
        <function-ref name="enableEvents" scoped="" ref="0x407463a8"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x40746488"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x40746568"/>
        <function-ref name="disableEvents" scoped="" ref="0x40746648"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40746728"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x40746808"/>
        <function-ref name="setControl" scoped="" ref="0x407468e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x40753ba8" loc="51:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x40753ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x40753d80"/>
        <function-ref name="getControl" scoped="" ref="0x40753e60"/>
        <function-ref name="enableEvents" scoped="" ref="0x4074e010"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x4074e0f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x4074e1d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x4074e2b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x4074e390"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x4074e470"/>
        <function-ref name="setControl" scoped="" ref="0x4074e550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x40750d28" loc="47:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x40750d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x40750f00"/>
        <function-ref name="setSynchronous" scoped="" ref="0x40741010"/>
        <function-ref name="captured" scoped="" ref="0x407410f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407411d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x407412b0"/>
        <function-ref name="setEdge" scoped="" ref="0x40741390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x4075b168" loc="68:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x4075b168"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x4075b340"/>
        <function-ref name="setSynchronous" scoped="" ref="0x4075b420"/>
        <function-ref name="captured" scoped="" ref="0x4075b500"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4075b5e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4075b6c0"/>
        <function-ref name="setEdge" scoped="" ref="0x4075b7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x40754ee8" loc="44:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x40754ee8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x407420e0"/>
        <function-ref name="setEvent" scoped="" ref="0x407421c0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x407422a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x40742380"/>
        <function-ref name="fired" scoped="" ref="0x40742460"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x4075f5f8" loc="61:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x4075f5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x4075f7d0"/>
        <function-ref name="setEvent" scoped="" ref="0x4075f8b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x4075f990"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x4075fa70"/>
        <function-ref name="fired" scoped="" ref="0x4075fb50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x4075abf8" loc="71:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x4075abf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x4075add0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x4075aeb0"/>
        <function-ref name="captured" scoped="" ref="0x40759010"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407590f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x407591d0"/>
        <function-ref name="setEdge" scoped="" ref="0x407592b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x4074cb80" loc="55:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x4074cb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x4074cd58"/>
        <function-ref name="getControl" scoped="" ref="0x4074ce38"/>
        <function-ref name="enableEvents" scoped="" ref="0x4074cf18"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x4074b010"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x4074b0f0"/>
        <function-ref name="disableEvents" scoped="" ref="0x4074b1d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x4074b2b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x4074b390"/>
        <function-ref name="setControl" scoped="" ref="0x4074b470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x40743830" loc="40:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x40743830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x40743a08"/>
        <function-ref name="getControl" scoped="" ref="0x40743ae8"/>
        <function-ref name="enableEvents" scoped="" ref="0x40743bc8"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x40743ca8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x40743d88"/>
        <function-ref name="disableEvents" scoped="" ref="0x40743e68"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40735010"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x407350f0"/>
        <function-ref name="setControl" scoped="" ref="0x407351d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x4075c010" loc="66:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x4075c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x4075c1e8"/>
        <function-ref name="setSynchronous" scoped="" ref="0x4075c2c8"/>
        <function-ref name="captured" scoped="" ref="0x4075c3a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4075c488"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4075c568"/>
        <function-ref name="setEdge" scoped="" ref="0x4075c648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x407605f8" loc="59:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x407605f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x407607d0"/>
        <function-ref name="setEvent" scoped="" ref="0x407608b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x40760990"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x40760a70"/>
        <function-ref name="fired" scoped="" ref="0x40760b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x4074e7e8" loc="52:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x4074e7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x4074ea40"/>
        <function-ref name="getControl" scoped="" ref="0x4074eb20"/>
        <function-ref name="enableEvents" scoped="" ref="0x4074ec00"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x4074ece0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x4074edc0"/>
        <function-ref name="disableEvents" scoped="" ref="0x4074eea0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x4074d010"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x4074d0f0"/>
        <function-ref name="setControl" scoped="" ref="0x4074d1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x407415f8" loc="48:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x407415f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x407417d0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x407418b0"/>
        <function-ref name="captured" scoped="" ref="0x40741990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40741a70"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40741b50"/>
        <function-ref name="setEdge" scoped="" ref="0x40741c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x4075ba08" loc="69:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x4075ba08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x4075bbe0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x4075bcc0"/>
        <function-ref name="captured" scoped="" ref="0x4075bda0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4075be80"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4075a010"/>
        <function-ref name="setEdge" scoped="" ref="0x4075a0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x4074d468" loc="53:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x4074d468"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x4074d640"/>
        <function-ref name="getControl" scoped="" ref="0x4074d720"/>
        <function-ref name="enableEvents" scoped="" ref="0x4074d800"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x4074d8e0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x4074d9c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x4074daa0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x4074db80"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x4074dc60"/>
        <function-ref name="setControl" scoped="" ref="0x4074dd40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x407426c8" loc="45:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x407426c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x407428a0"/>
        <function-ref name="setEvent" scoped="" ref="0x40742980"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x40742a60"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x40742b40"/>
        <function-ref name="fired" scoped="" ref="0x40742c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x40748bb0" loc="39:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x40748bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40748d88"/>
        <function-ref name="setClockSource" scoped="" ref="0x40748e68"/>
        <function-ref name="enableEvents" scoped="" ref="0x40736010"/>
        <function-ref name="get" scoped="" ref="0x407360f0"/>
        <function-ref name="disableEvents" scoped="" ref="0x407361d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407362b0"/>
        <function-ref name="getMode" scoped="" ref="0x40736390"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40736470"/>
        <function-ref name="overflow" scoped="" ref="0x40736550"/>
        <function-ref name="setMode" scoped="" ref="0x40736630"/>
        <function-ref name="setInputDivider" scoped="" ref="0x40736710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x4075fdb8" loc="62:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x4075fdb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x4075e010"/>
        <function-ref name="setEvent" scoped="" ref="0x4075e0f0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x4075e1d0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x4075e2b0"/>
        <function-ref name="fired" scoped="" ref="0x4075e390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x40735468" loc="41:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x40735468"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x40735640"/>
        <function-ref name="getControl" scoped="" ref="0x40735720"/>
        <function-ref name="enableEvents" scoped="" ref="0x40735800"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x407358e0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x407359c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x40735aa0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40735b80"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x40735c60"/>
        <function-ref name="setControl" scoped="" ref="0x40735d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x4074b708" loc="56:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x4074b708"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x4074b8e0"/>
        <function-ref name="getControl" scoped="" ref="0x4074b9c0"/>
        <function-ref name="enableEvents" scoped="" ref="0x4074baa0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x4074bb80"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x4074bc60"/>
        <function-ref name="disableEvents" scoped="" ref="0x4074bd40"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x4074be20"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x4074bf00"/>
        <function-ref name="setControl" scoped="" ref="0x40761010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x40750488" loc="46:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x40750488"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x40750660"/>
        <function-ref name="setSynchronous" scoped="" ref="0x40750740"/>
        <function-ref name="captured" scoped="" ref="0x40750820"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40750900"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x407509e0"/>
        <function-ref name="setEdge" scoped="" ref="0x40750ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x4075c8b0" loc="67:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x4075c8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x4075ca88"/>
        <function-ref name="setSynchronous" scoped="" ref="0x4075cb68"/>
        <function-ref name="captured" scoped="" ref="0x4075cc48"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4075cd28"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4075ce08"/>
        <function-ref name="setEdge" scoped="" ref="0x4075cee8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x40754728" loc="43:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x40754728"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x40754900"/>
        <function-ref name="setEvent" scoped="" ref="0x407549e0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x40754ac0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x40754ba0"/>
        <function-ref name="fired" scoped="" ref="0x40754c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x40760db8" loc="60:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x40760db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x4075f010"/>
        <function-ref name="setEvent" scoped="" ref="0x4075f0f0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x4075f1d0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x4075f2b0"/>
        <function-ref name="fired" scoped="" ref="0x4075f390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x4075a358" loc="70:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x4075a358"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x4075a530"/>
        <function-ref name="setSynchronous" scoped="" ref="0x4075a610"/>
        <function-ref name="captured" scoped="" ref="0x4075a6f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4075a7d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4075a8b0"/>
        <function-ref name="setEdge" scoped="" ref="0x4075a990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x4074c010" loc="54:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x4074c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x4074c1e8"/>
        <function-ref name="getControl" scoped="" ref="0x4074c2c8"/>
        <function-ref name="enableEvents" scoped="" ref="0x4074c3a8"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x4074c488"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x4074c568"/>
        <function-ref name="disableEvents" scoped="" ref="0x4074c648"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x4074c728"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x4074c808"/>
        <function-ref name="setControl" scoped="" ref="0x4074c8e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x40741e60" loc="50:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x40741e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40753050"/>
        <function-ref name="setClockSource" scoped="" ref="0x40753130"/>
        <function-ref name="enableEvents" scoped="" ref="0x40753210"/>
        <function-ref name="get" scoped="" ref="0x407532f0"/>
        <function-ref name="disableEvents" scoped="" ref="0x407533d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407534b0"/>
        <function-ref name="getMode" scoped="" ref="0x40753590"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40753670"/>
        <function-ref name="overflow" scoped="" ref="0x40753750"/>
        <function-ref name="setMode" scoped="" ref="0x40753830"/>
        <function-ref name="setInputDivider" scoped="" ref="0x40753910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x4075e5f8" loc="63:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x4075e5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x4075e7d0"/>
        <function-ref name="setEvent" scoped="" ref="0x4075e8b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x4075e990"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x4075ea70"/>
        <function-ref name="fired" scoped="" ref="0x4075eb50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x4075d6a8" loc="65:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x4075d6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x4075d880"/>
        <function-ref name="setSynchronous" scoped="" ref="0x4075d960"/>
        <function-ref name="captured" scoped="" ref="0x4075da40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4075db20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4075dc00"/>
        <function-ref name="setEdge" scoped="" ref="0x4075dce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x4075edb8" loc="64:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x4075edb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x4075d0c0"/>
        <function-ref name="setEvent" scoped="" ref="0x4075d1a0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x4075d280"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x4075d360"/>
        <function-ref name="fired" scoped="" ref="0x4075d440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x40761de8" loc="58:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x40761de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x40760010"/>
        <function-ref name="setEvent" scoped="" ref="0x407600f0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x407601d0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x407602b0"/>
        <function-ref name="fired" scoped="" ref="0x40760390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x407612a8" loc="57:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x407612a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x40761480"/>
        <function-ref name="getControl" scoped="" ref="0x40761560"/>
        <function-ref name="enableEvents" scoped="" ref="0x40761640"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x40761720"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x40761800"/>
        <function-ref name="disableEvents" scoped="" ref="0x407618e0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x407619c0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x40761aa0"/>
        <function-ref name="setControl" scoped="" ref="0x40761b80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x40781d48" loc="53:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x40781d48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40781f20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x407819f0" loc="52:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x407819f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40781bc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x407800b8" loc="54:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x407800b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40780290"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x40781688" loc="51:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x40781688"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4003add8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40781870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x407569c0" loc="50:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x407569c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40756b98"/>
        <function-ref name="setClockSource" scoped="" ref="0x40756c78"/>
        <function-ref name="enableEvents" scoped="" ref="0x40756d58"/>
        <function-ref name="get" scoped="" ref="0x40756e38"/>
        <function-ref name="disableEvents" scoped="" ref="0x40756f18"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40781010"/>
        <function-ref name="getMode" scoped="" ref="0x407810f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x407811d0"/>
        <function-ref name="overflow" scoped="" ref="0x407812b0"/>
        <function-ref name="setMode" scoped="" ref="0x40781390"/>
        <function-ref name="setInputDivider" scoped="" ref="0x40781470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x4077d768" loc="53:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x4077d768"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4077d940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x4077d410" loc="52:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x4077d410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4077d5e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x4077dac0" loc="54:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x4077dac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4077dc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x4077d0a8" loc="51:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x4077d0a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4003add8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4077d290"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x4077e3d8" loc="50:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x4077e3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4077e5b0"/>
        <function-ref name="setClockSource" scoped="" ref="0x4077e690"/>
        <function-ref name="enableEvents" scoped="" ref="0x4077e770"/>
        <function-ref name="get" scoped="" ref="0x4077e850"/>
        <function-ref name="disableEvents" scoped="" ref="0x4077e930"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4077ea10"/>
        <function-ref name="getMode" scoped="" ref="0x4077eaf0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4077ebd0"/>
        <function-ref name="overflow" scoped="" ref="0x4077ecb0"/>
        <function-ref name="setMode" scoped="" ref="0x4077ed90"/>
        <function-ref name="setInputDivider" scoped="" ref="0x4077ee70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x4077a550" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x4077a550"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x4077a728"/>
        <function-ref name="setSynchronous" scoped="" ref="0x4077a808"/>
        <function-ref name="captured" scoped="" ref="0x4077a8e8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4077a9c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4077aaa8"/>
        <function-ref name="setEdge" scoped="" ref="0x4077ab88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x4077b3e0" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x4077b3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x4077b5b8"/>
        <function-ref name="getControl" scoped="" ref="0x4077b698"/>
        <function-ref name="enableEvents" scoped="" ref="0x4077b778"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x4077b858"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x4077b938"/>
        <function-ref name="disableEvents" scoped="" ref="0x4077ba18"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x4077baf8"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x4077bbd8"/>
        <function-ref name="setControl" scoped="" ref="0x4077bcb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x407b1970" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x407b1970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x407b1b48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x4077be38" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x4077be38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x4077a050"/>
        <function-ref name="setEvent" scoped="" ref="0x4077a130"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x4077a210"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x4077a2f0"/>
        <function-ref name="fired" scoped="" ref="0x4077a3d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x4077ad08" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x4077ad08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4077aee0"/>
        <function-ref name="setClockSource" scoped="" ref="0x407b1010"/>
        <function-ref name="enableEvents" scoped="" ref="0x407b10f0"/>
        <function-ref name="get" scoped="" ref="0x407b11d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x407b12b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407b1390"/>
        <function-ref name="getMode" scoped="" ref="0x407b1470"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x407b1550"/>
        <function-ref name="overflow" scoped="" ref="0x407b1630"/>
        <function-ref name="setMode" scoped="" ref="0x407b1710"/>
        <function-ref name="setInputDivider" scoped="" ref="0x407b17f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x407ae430" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x407ae430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x407ae608"/>
        <function-ref name="setSynchronous" scoped="" ref="0x407ae6e8"/>
        <function-ref name="captured" scoped="" ref="0x407ae7c8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407ae8a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x407ae988"/>
        <function-ref name="setEdge" scoped="" ref="0x407aea68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x407af220" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x407af220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x407af3f8"/>
        <function-ref name="getControl" scoped="" ref="0x407af4d8"/>
        <function-ref name="enableEvents" scoped="" ref="0x407af5b8"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x407af698"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x407af778"/>
        <function-ref name="disableEvents" scoped="" ref="0x407af858"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x407af938"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x407afa18"/>
        <function-ref name="setControl" scoped="" ref="0x407afaf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x407ad890" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x407ad890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x407ada68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x407afc78" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x407afc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x407afe50"/>
        <function-ref name="setEvent" scoped="" ref="0x407ae010"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x407ae0f0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x407ae1d0"/>
        <function-ref name="fired" scoped="" ref="0x407ae2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x407aebe8" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x407aebe8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407aedc0"/>
        <function-ref name="setClockSource" scoped="" ref="0x407aeea0"/>
        <function-ref name="enableEvents" scoped="" ref="0x407ad010"/>
        <function-ref name="get" scoped="" ref="0x407ad0f0"/>
        <function-ref name="disableEvents" scoped="" ref="0x407ad1d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407ad2b0"/>
        <function-ref name="getMode" scoped="" ref="0x407ad390"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x407ad470"/>
        <function-ref name="overflow" scoped="" ref="0x407ad550"/>
        <function-ref name="setMode" scoped="" ref="0x407ad630"/>
        <function-ref name="setInputDivider" scoped="" ref="0x407ad710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x407aa270" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x407aa270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x407aa448"/>
        <function-ref name="setSynchronous" scoped="" ref="0x407aa528"/>
        <function-ref name="captured" scoped="" ref="0x407aa608"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407aa6e8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x407aa7c8"/>
        <function-ref name="setEdge" scoped="" ref="0x407aa8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x407ab120" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x407ab120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x407ab2f8"/>
        <function-ref name="getControl" scoped="" ref="0x407ab3d8"/>
        <function-ref name="enableEvents" scoped="" ref="0x407ab4b8"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x407ab598"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x407ab678"/>
        <function-ref name="disableEvents" scoped="" ref="0x407ab758"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x407ab838"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x407ab918"/>
        <function-ref name="setControl" scoped="" ref="0x407ab9f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x407c16d0" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x407c16d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x407c18a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x407abb78" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x407abb78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x407abd50"/>
        <function-ref name="setEvent" scoped="" ref="0x407abe30"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x407abf10"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x407aa010"/>
        <function-ref name="fired" scoped="" ref="0x407aa0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x407aaa28" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x407aaa28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407aac00"/>
        <function-ref name="setClockSource" scoped="" ref="0x407aace0"/>
        <function-ref name="enableEvents" scoped="" ref="0x407aadc0"/>
        <function-ref name="get" scoped="" ref="0x407aaea0"/>
        <function-ref name="disableEvents" scoped="" ref="0x407c1010"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407c10f0"/>
        <function-ref name="getMode" scoped="" ref="0x407c11d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x407c12b0"/>
        <function-ref name="overflow" scoped="" ref="0x407c1390"/>
        <function-ref name="setMode" scoped="" ref="0x407c1470"/>
        <function-ref name="setInputDivider" scoped="" ref="0x407c1550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x407be190" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x407be190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x407be368"/>
        <function-ref name="setSynchronous" scoped="" ref="0x407be448"/>
        <function-ref name="captured" scoped="" ref="0x407be528"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407be608"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x407be6e8"/>
        <function-ref name="setEdge" scoped="" ref="0x407be7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x407bf010" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x407bf010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x407bf1e8"/>
        <function-ref name="getControl" scoped="" ref="0x407bf2c8"/>
        <function-ref name="enableEvents" scoped="" ref="0x407bf3a8"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x407bf488"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x407bf568"/>
        <function-ref name="disableEvents" scoped="" ref="0x407bf648"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x407bf728"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x407bf808"/>
        <function-ref name="setControl" scoped="" ref="0x407bf8e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x407bd5f0" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x407bd5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x407bd7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x407bfa68" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x407bfa68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x407bfc40"/>
        <function-ref name="setEvent" scoped="" ref="0x407bfd20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x407bfe00"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x407bfee0"/>
        <function-ref name="fired" scoped="" ref="0x407be010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x407be948" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x407be948"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407beb20"/>
        <function-ref name="setClockSource" scoped="" ref="0x407bec00"/>
        <function-ref name="enableEvents" scoped="" ref="0x407bece0"/>
        <function-ref name="get" scoped="" ref="0x407bedc0"/>
        <function-ref name="disableEvents" scoped="" ref="0x407beea0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407bd010"/>
        <function-ref name="getMode" scoped="" ref="0x407bd0f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x407bd1d0"/>
        <function-ref name="overflow" scoped="" ref="0x407bd2b0"/>
        <function-ref name="setMode" scoped="" ref="0x407bd390"/>
        <function-ref name="setInputDivider" scoped="" ref="0x407bd470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x407b9010" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x407b9010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x407b91e8"/>
        <function-ref name="setSynchronous" scoped="" ref="0x407b92c8"/>
        <function-ref name="captured" scoped="" ref="0x407b93a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407b9488"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x407b9568"/>
        <function-ref name="setEdge" scoped="" ref="0x407b9648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x407bce68" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x407bce68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x407ba050"/>
        <function-ref name="getControl" scoped="" ref="0x407ba130"/>
        <function-ref name="enableEvents" scoped="" ref="0x407ba210"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x407ba2f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x407ba3d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x407ba4b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x407ba590"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x407ba670"/>
        <function-ref name="setControl" scoped="" ref="0x407ba750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x407b8430" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x407b8430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x407b8608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x407ba8d0" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x407ba8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x407baaa8"/>
        <function-ref name="setEvent" scoped="" ref="0x407bab88"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x407bac68"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x407bad48"/>
        <function-ref name="fired" scoped="" ref="0x407bae28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x407b97c8" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x407b97c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407b99a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x407b9a80"/>
        <function-ref name="enableEvents" scoped="" ref="0x407b9b60"/>
        <function-ref name="get" scoped="" ref="0x407b9c40"/>
        <function-ref name="disableEvents" scoped="" ref="0x407b9d20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407b9e00"/>
        <function-ref name="getMode" scoped="" ref="0x407b9ee0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x407b8010"/>
        <function-ref name="overflow" scoped="" ref="0x407b80f0"/>
        <function-ref name="setMode" scoped="" ref="0x407b81d0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x407b82b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x407b6e88" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x407b6e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x407cd070"/>
        <function-ref name="setSynchronous" scoped="" ref="0x407cd150"/>
        <function-ref name="captured" scoped="" ref="0x407cd230"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407cd310"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x407cd3f0"/>
        <function-ref name="setEdge" scoped="" ref="0x407cd4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x407b7ca8" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x407b7ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x407b7e80"/>
        <function-ref name="getControl" scoped="" ref="0x407b6010"/>
        <function-ref name="enableEvents" scoped="" ref="0x407b60f0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x407b61d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x407b62b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x407b6390"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x407b6470"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x407b6550"/>
        <function-ref name="setControl" scoped="" ref="0x407b6630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x407cc278" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x407cc278"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x407cc450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x407b67b0" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x407b67b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x407b6988"/>
        <function-ref name="setEvent" scoped="" ref="0x407b6a68"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x407b6b48"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x407b6c28"/>
        <function-ref name="fired" scoped="" ref="0x407b6d08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x407cd650" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x407cd650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407cd828"/>
        <function-ref name="setClockSource" scoped="" ref="0x407cd908"/>
        <function-ref name="enableEvents" scoped="" ref="0x407cd9e8"/>
        <function-ref name="get" scoped="" ref="0x407cdac8"/>
        <function-ref name="disableEvents" scoped="" ref="0x407cdba8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407cdc88"/>
        <function-ref name="getMode" scoped="" ref="0x407cdd68"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x407cde48"/>
        <function-ref name="overflow" scoped="" ref="0x407cdf28"/>
        <function-ref name="setMode" scoped="" ref="0x407cc018"/>
        <function-ref name="setInputDivider" scoped="" ref="0x407cc0f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x407cacc8" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x407cacc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x407caea0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x407c9010"/>
        <function-ref name="captured" scoped="" ref="0x407c90f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407c91d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x407c92b0"/>
        <function-ref name="setEdge" scoped="" ref="0x407c9390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x407cbaf0" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x407cbaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x407cbcc8"/>
        <function-ref name="getControl" scoped="" ref="0x407cbda8"/>
        <function-ref name="enableEvents" scoped="" ref="0x407cbe88"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x407ca010"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x407ca0f0"/>
        <function-ref name="disableEvents" scoped="" ref="0x407ca1d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x407ca2b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x407ca390"/>
        <function-ref name="setControl" scoped="" ref="0x407ca470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x407c8190" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x407c8190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x407c8368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x407ca5f0" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x407ca5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x407ca7c8"/>
        <function-ref name="setEvent" scoped="" ref="0x407ca8a8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x407ca988"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x407caa68"/>
        <function-ref name="fired" scoped="" ref="0x407cab48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x407c9510" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x407c9510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407c96e8"/>
        <function-ref name="setClockSource" scoped="" ref="0x407c97c8"/>
        <function-ref name="enableEvents" scoped="" ref="0x407c98a8"/>
        <function-ref name="get" scoped="" ref="0x407c9988"/>
        <function-ref name="disableEvents" scoped="" ref="0x407c9a68"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407c9b48"/>
        <function-ref name="getMode" scoped="" ref="0x407c9c28"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x407c9d08"/>
        <function-ref name="overflow" scoped="" ref="0x407c9de8"/>
        <function-ref name="setMode" scoped="" ref="0x407c9ec8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x407c8010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x407c6be8" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x407c6be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x407c6dc0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x407c6ea0"/>
        <function-ref name="captured" scoped="" ref="0x407c5010"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407c50f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x407c51d0"/>
        <function-ref name="setEdge" scoped="" ref="0x407c52b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x407c7a10" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x407c7a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x407c7be8"/>
        <function-ref name="getControl" scoped="" ref="0x407c7cc8"/>
        <function-ref name="enableEvents" scoped="" ref="0x407c7da8"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x407c7e88"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x407c6010"/>
        <function-ref name="disableEvents" scoped="" ref="0x407c60f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x407c61d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x407c62b0"/>
        <function-ref name="setControl" scoped="" ref="0x407c6390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x407c3080" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x407c3080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x407c3258"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x407c6510" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x407c6510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x407c66e8"/>
        <function-ref name="setEvent" scoped="" ref="0x407c67c8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x407c68a8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x407c6988"/>
        <function-ref name="fired" scoped="" ref="0x407c6a68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x407c5430" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x407c5430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407c5608"/>
        <function-ref name="setClockSource" scoped="" ref="0x407c56e8"/>
        <function-ref name="enableEvents" scoped="" ref="0x407c57c8"/>
        <function-ref name="get" scoped="" ref="0x407c58a8"/>
        <function-ref name="disableEvents" scoped="" ref="0x407c5988"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407c5a68"/>
        <function-ref name="getMode" scoped="" ref="0x407c5b48"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x407c5c28"/>
        <function-ref name="overflow" scoped="" ref="0x407c5d08"/>
        <function-ref name="setMode" scoped="" ref="0x407c5de8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x407c5ec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x407d9b08" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x407d9b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x407d9ce0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x407d9dc0"/>
        <function-ref name="captured" scoped="" ref="0x407d9ea0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407d8010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x407d80f0"/>
        <function-ref name="setEdge" scoped="" ref="0x407d81d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x407c28f8" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x407c28f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x407c2ad0"/>
        <function-ref name="getControl" scoped="" ref="0x407c2bb0"/>
        <function-ref name="enableEvents" scoped="" ref="0x407c2c90"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x407c2d70"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x407c2e50"/>
        <function-ref name="disableEvents" scoped="" ref="0x407d9010"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x407d90f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x407d91d0"/>
        <function-ref name="setControl" scoped="" ref="0x407d92b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x407d7010" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x407d7010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x407d71e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x407d9430" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x407d9430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x407d9608"/>
        <function-ref name="setEvent" scoped="" ref="0x407d96e8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x407d97c8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x407d98a8"/>
        <function-ref name="fired" scoped="" ref="0x407d9988"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x407d8350" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x407d8350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407d8528"/>
        <function-ref name="setClockSource" scoped="" ref="0x407d8608"/>
        <function-ref name="enableEvents" scoped="" ref="0x407d86e8"/>
        <function-ref name="get" scoped="" ref="0x407d87c8"/>
        <function-ref name="disableEvents" scoped="" ref="0x407d88a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407d8988"/>
        <function-ref name="getMode" scoped="" ref="0x407d8a68"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x407d8b48"/>
        <function-ref name="overflow" scoped="" ref="0x407d8c28"/>
        <function-ref name="setMode" scoped="" ref="0x407d8d08"/>
        <function-ref name="setInputDivider" scoped="" ref="0x407d8de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x407d5a28" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x407d5a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x407d5c00"/>
        <function-ref name="setSynchronous" scoped="" ref="0x407d5ce0"/>
        <function-ref name="captured" scoped="" ref="0x407d5dc0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407d5ea0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x407d4010"/>
        <function-ref name="setEdge" scoped="" ref="0x407d40f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x407d6870" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x407d6870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x407d6a48"/>
        <function-ref name="getControl" scoped="" ref="0x407d6b28"/>
        <function-ref name="enableEvents" scoped="" ref="0x407d6c08"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x407d6ce8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x407d6dc8"/>
        <function-ref name="disableEvents" scoped="" ref="0x407d6ea8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x407d5010"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x407d50f0"/>
        <function-ref name="setControl" scoped="" ref="0x407d51d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x407d4e88" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x407d4e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x407d3070"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x407d5350" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x407d5350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x407d5528"/>
        <function-ref name="setEvent" scoped="" ref="0x407d5608"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x407d56e8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x407d57c8"/>
        <function-ref name="fired" scoped="" ref="0x407d58a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x407d4270" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x407d4270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407d4448"/>
        <function-ref name="setClockSource" scoped="" ref="0x407d4528"/>
        <function-ref name="enableEvents" scoped="" ref="0x407d4608"/>
        <function-ref name="get" scoped="" ref="0x407d46e8"/>
        <function-ref name="disableEvents" scoped="" ref="0x407d47c8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407d48a8"/>
        <function-ref name="getMode" scoped="" ref="0x407d4988"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x407d4a68"/>
        <function-ref name="overflow" scoped="" ref="0x407d4b48"/>
        <function-ref name="setMode" scoped="" ref="0x407d4c28"/>
        <function-ref name="setInputDivider" scoped="" ref="0x407d4d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x407cf1b0" loc="7:../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x407cf1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x407cf388"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x407d03e8" loc="4:../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x407d03e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x407d05c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x407d0870" loc="5:../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x407d0870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x407d0a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x407d0cf8" loc="6:../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x407d0cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x407d0ed0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x405e38a8" loc="55:../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x405e38a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x405e3a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x4035ea90" loc="51:../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x4035ea90"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x4035ec68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x40551780" loc="52:../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x40551780"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40551958"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430ClockInit" ref="0x4070b670" loc="39:../../tos/platforms/telosb/MoteClockP.nc">
      <component-ref qname="MoteClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x4070b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x4070be68"/>
        <function-ref name="initTimerB" scoped="" ref="0x4070b928"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x4070ba08"/>
        <function-ref name="initTimerA" scoped="" ref="0x4070bae8"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x4070b848"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x4070bbc8"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x4070bca8"/>
        <function-ref name="initClocks" scoped="" ref="0x4070bd88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x40830b68" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x40830b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40830d40"/>
        <function-ref name="isInput" scoped="" ref="0x40830e20"/>
        <function-ref name="setResistor" scoped="" ref="0x40830f00"/>
        <function-ref name="toggle" scoped="" ref="0x40840010"/>
        <function-ref name="isOutput" scoped="" ref="0x408400f0"/>
        <function-ref name="getResistor" scoped="" ref="0x408401d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x408402b0"/>
        <function-ref name="get" scoped="" ref="0x40840390"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40840470"/>
        <function-ref name="getRaw" scoped="" ref="0x40840550"/>
        <function-ref name="set" scoped="" ref="0x40840630"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x40840710"/>
        <function-ref name="isIOFunc" scoped="" ref="0x408407f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40840950"/>
        <function-ref name="clr" scoped="" ref="0x40840a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x408301f0" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x408301f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408303c8"/>
        <function-ref name="isInput" scoped="" ref="0x408304a8"/>
        <function-ref name="toggle" scoped="" ref="0x40830588"/>
        <function-ref name="isOutput" scoped="" ref="0x40830668"/>
        <function-ref name="get" scoped="" ref="0x40830748"/>
        <function-ref name="makeOutput" scoped="" ref="0x40830828"/>
        <function-ref name="set" scoped="" ref="0x40830908"/>
        <function-ref name="clr" scoped="" ref="0x408309e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x4083e350" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x4083e350"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4083e528"/>
        <function-ref name="isInput" scoped="" ref="0x4083e608"/>
        <function-ref name="setResistor" scoped="" ref="0x4083e6e8"/>
        <function-ref name="toggle" scoped="" ref="0x4083e7c8"/>
        <function-ref name="isOutput" scoped="" ref="0x4083e8a8"/>
        <function-ref name="getResistor" scoped="" ref="0x4083e988"/>
        <function-ref name="makeOutput" scoped="" ref="0x4083ea68"/>
        <function-ref name="get" scoped="" ref="0x4083eb48"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x4083ec28"/>
        <function-ref name="getRaw" scoped="" ref="0x4083ed08"/>
        <function-ref name="set" scoped="" ref="0x4083ede8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x4083eec8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x4083d010"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x4083d170"/>
        <function-ref name="clr" scoped="" ref="0x4083d250"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x4083f990" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x4083f990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4083fb68"/>
        <function-ref name="isInput" scoped="" ref="0x4083fc48"/>
        <function-ref name="toggle" scoped="" ref="0x4083fd28"/>
        <function-ref name="isOutput" scoped="" ref="0x4083fe08"/>
        <function-ref name="get" scoped="" ref="0x4083fee8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4083e010"/>
        <function-ref name="set" scoped="" ref="0x4083e0f0"/>
        <function-ref name="clr" scoped="" ref="0x4083e1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x4083cb20" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x4083cb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4083ccf8"/>
        <function-ref name="isInput" scoped="" ref="0x4083cdd8"/>
        <function-ref name="setResistor" scoped="" ref="0x4083ceb8"/>
        <function-ref name="toggle" scoped="" ref="0x4083b010"/>
        <function-ref name="isOutput" scoped="" ref="0x4083b0f0"/>
        <function-ref name="getResistor" scoped="" ref="0x4083b1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4083b2b0"/>
        <function-ref name="get" scoped="" ref="0x4083b390"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x4083b470"/>
        <function-ref name="getRaw" scoped="" ref="0x4083b550"/>
        <function-ref name="set" scoped="" ref="0x4083b630"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x4083b710"/>
        <function-ref name="isIOFunc" scoped="" ref="0x4083b7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x4083b950"/>
        <function-ref name="clr" scoped="" ref="0x4083ba30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x4083c1a8" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x4083c1a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4083c380"/>
        <function-ref name="isInput" scoped="" ref="0x4083c460"/>
        <function-ref name="toggle" scoped="" ref="0x4083c540"/>
        <function-ref name="isOutput" scoped="" ref="0x4083c620"/>
        <function-ref name="get" scoped="" ref="0x4083c700"/>
        <function-ref name="makeOutput" scoped="" ref="0x4083c7e0"/>
        <function-ref name="set" scoped="" ref="0x4083c8c0"/>
        <function-ref name="clr" scoped="" ref="0x4083c9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x40835dc0" loc="58:../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x40835dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40834010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x408359b8" loc="57:../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x408359b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x40835b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x4084b808" loc="60:../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x4084b808"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4084b9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x40834a70" loc="57:../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x40834a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x40834c48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x4084b400" loc="59:../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x4084b400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4084b5d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x40834e08" loc="58:../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x40834e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4084b010"/>
        <function-ref name="taskLoop" scoped="" ref="0x4084b0f0"/>
        <function-ref name="runNextTask" scoped="" ref="0x4084b1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x4036ad58" loc="48:../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x4036ad58"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4003add8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4035f010"/>
        <function-ref name="runTask" scoped="" ref="0x4035f0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x4035d5f0" loc="47:../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x4035d5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4035d7c8"/>
        <function-ref name="taskLoop" scoped="" ref="0x4035d8a8"/>
        <function-ref name="runNextTask" scoped="" ref="0x4035d988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x405d1590" loc="56:../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x405d1590"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4003add8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x405d1768"/>
        <function-ref name="runTask" scoped="" ref="0x405d1848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x405cc210" loc="57:../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x405cc210"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x405cc3e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x405c2cd0" loc="55:../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x405c2cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x405c2ea8"/>
        <function-ref name="taskLoop" scoped="" ref="0x405d1010"/>
        <function-ref name="runNextTask" scoped="" ref="0x405d10f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x40843340" loc="6:BootLedsC.nc">
      <component-ref qname="BootLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x40843340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x40843518"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LigarTimerC" ref="0x40852968" loc="9:BootLedsC.nc">
      <component-ref qname="BootLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LigarTimerC" scoped="" ref="0x40852968"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x405e9a00"/>
            <typename><typedef-ref name="TMilli" ref="0x405e9bc8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x408504c8"/>
        <function-ref name="fired" scoped="" ref="0x40851768"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40851e70"/>
        <function-ref name="isOneShot" scoped="" ref="0x40851c18"/>
        <function-ref name="getdt" scoped="" ref="0x40850978"/>
        <function-ref name="gett0" scoped="" ref="0x40850720"/>
        <function-ref name="isRunning" scoped="" ref="0x408519c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40851010"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x408501a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x40851290"/>
        <function-ref name="stop" scoped="" ref="0x40851510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LigarTimerA" ref="0x408552a0" loc="7:BootLedsC.nc">
      <component-ref qname="BootLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LigarTimerA" scoped="" ref="0x408552a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x405e9a00"/>
            <typename><typedef-ref name="TMilli" ref="0x405e9bc8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40842d90"/>
        <function-ref name="fired" scoped="" ref="0x40842048"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40842750"/>
        <function-ref name="isOneShot" scoped="" ref="0x408424f8"/>
        <function-ref name="getdt" scoped="" ref="0x40841268"/>
        <function-ref name="gett0" scoped="" ref="0x40841010"/>
        <function-ref name="isRunning" scoped="" ref="0x408422a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x408558c8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40842a70"/>
        <function-ref name="startOneShot" scoped="" ref="0x40855b48"/>
        <function-ref name="stop" scoped="" ref="0x40855dc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x408456b8" loc="5:BootLedsC.nc">
      <component-ref qname="BootLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x408456b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40845890"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40845970"/>
        <function-ref name="led1On" scoped="" ref="0x40845a50"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40845b30"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40845c10"/>
        <function-ref name="get" scoped="" ref="0x40845cf0"/>
        <function-ref name="led1Off" scoped="" ref="0x40845dd0"/>
        <function-ref name="led2Off" scoped="" ref="0x408431d0"/>
        <function-ref name="set" scoped="" ref="0x40845eb0"/>
        <function-ref name="led0On" scoped="" ref="0x40843010"/>
        <function-ref name="led2On" scoped="" ref="0x408430f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LigarTimerB" ref="0x40841610" loc="8:BootLedsC.nc">
      <component-ref qname="BootLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LigarTimerB" scoped="" ref="0x40841610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x405e9a00"/>
            <typename><typedef-ref name="TMilli" ref="0x405e9bc8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40852110"/>
        <function-ref name="fired" scoped="" ref="0x408543a8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40854ab0"/>
        <function-ref name="isOneShot" scoped="" ref="0x40854858"/>
        <function-ref name="getdt" scoped="" ref="0x408525c0"/>
        <function-ref name="gett0" scoped="" ref="0x40852368"/>
        <function-ref name="isRunning" scoped="" ref="0x40854600"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40841c38"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40854dd0"/>
        <function-ref name="startOneShot" scoped="" ref="0x40841eb8"/>
        <function-ref name="stop" scoped="" ref="0x40854150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x4084ccd8" loc="45:../../tos/system/TimerMilliC.nc">
      <component-ref qname="BootLedsAppC.LigarTimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x4084ccd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x405e9a00"/>
            <typename><typedef-ref name="TMilli" ref="0x405e9bc8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4085f8a8"/>
        <function-ref name="fired" scoped="" ref="0x40864aa8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4085f268"/>
        <function-ref name="isOneShot" scoped="" ref="0x4085f010"/>
        <function-ref name="getdt" scoped="" ref="0x4085fd58"/>
        <function-ref name="gett0" scoped="" ref="0x4085fb00"/>
        <function-ref name="isRunning" scoped="" ref="0x40864d00"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40864350"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4085f588"/>
        <function-ref name="startOneShot" scoped="" ref="0x408645d0"/>
        <function-ref name="stop" scoped="" ref="0x40864850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x40861cc8" loc="49:../../tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x40861cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x405e9a00"/>
            <typename><typedef-ref name="TMilli" ref="0x405e9bc8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4003add8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4085c7c8"/>
        <function-ref name="fired" scoped="" ref="0x4085ea68"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4085c188"/>
        <function-ref name="isOneShot" scoped="" ref="0x4085ef18"/>
        <function-ref name="getdt" scoped="" ref="0x4085cc78"/>
        <function-ref name="gett0" scoped="" ref="0x4085ca20"/>
        <function-ref name="isRunning" scoped="" ref="0x4085ecc0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4085e310"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4085c4a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x4085e590"/>
        <function-ref name="stop" scoped="" ref="0x4085e810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x4085bd48" loc="46:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x4085bd48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x405e9a00"/>
            <typename><typedef-ref name="TMilli" ref="0x405e9bc8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4003add8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x408728a8"/>
        <function-ref name="fired" scoped="" ref="0x40874b18"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40872268"/>
        <function-ref name="isOneShot" scoped="" ref="0x40872010"/>
        <function-ref name="getdt" scoped="" ref="0x40872d58"/>
        <function-ref name="gett0" scoped="" ref="0x40872b00"/>
        <function-ref name="isRunning" scoped="" ref="0x40874d70"/>
        <function-ref name="startPeriodic" scoped="" ref="0x408743c0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40872588"/>
        <function-ref name="startOneShot" scoped="" ref="0x40874640"/>
        <function-ref name="stop" scoped="" ref="0x408748c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40871da8" loc="47:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x40871da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x405e9a00"/>
            <typename><typedef-ref name="TMilli" ref="0x405e9bc8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40870400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4085b598" loc="45:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x4085b598"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4085b770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x4086e468" loc="44:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x4086e468"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x405e9a00"/>
            <typename><typedef-ref name="TMilli" ref="0x405e9bc8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x401eb250"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x408e8940"/>
        <function-ref name="fired" scoped="" ref="0x408e8110"/>
        <function-ref name="startAt" scoped="" ref="0x408e8600"/>
        <function-ref name="isRunning" scoped="" ref="0x408e8388"/>
        <function-ref name="getAlarm" scoped="" ref="0x408e8bb8"/>
        <function-ref name="start" scoped="" ref="0x4086ebb8"/>
        <function-ref name="stop" scoped="" ref="0x4086ee58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4086e010" loc="43:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x4086e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4086e1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40bca950" loc="44:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x40bca950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x405e9e40"/>
            <typename><typedef-ref name="T32khz" ref="0x40845048"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x401eb010"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40bc9e00"/>
        <function-ref name="fired" scoped="" ref="0x40bc95d0"/>
        <function-ref name="startAt" scoped="" ref="0x40bc9ac0"/>
        <function-ref name="isRunning" scoped="" ref="0x40bc9848"/>
        <function-ref name="getAlarm" scoped="" ref="0x40bf1088"/>
        <function-ref name="start" scoped="" ref="0x40bc90b8"/>
        <function-ref name="stop" scoped="" ref="0x40bc9358"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40bca4f8" loc="43:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x40bca4f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40bca6d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x40be6870" loc="41:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x40be6870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x40be6a48"/>
        <function-ref name="setEvent" scoped="" ref="0x40be6b28"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x40be6c08"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x40be6ce8"/>
        <function-ref name="fired" scoped="" ref="0x40be6dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x40be71b0" loc="39:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x40be71b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40be7388"/>
        <function-ref name="setClockSource" scoped="" ref="0x40be7468"/>
        <function-ref name="enableEvents" scoped="" ref="0x40be7548"/>
        <function-ref name="get" scoped="" ref="0x40be7628"/>
        <function-ref name="disableEvents" scoped="" ref="0x40be7708"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40be77e8"/>
        <function-ref name="getMode" scoped="" ref="0x40be78c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40be79a8"/>
        <function-ref name="overflow" scoped="" ref="0x40be7a88"/>
        <function-ref name="setMode" scoped="" ref="0x40be7b68"/>
        <function-ref name="setInputDivider" scoped="" ref="0x40be7c48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x40be7da8" loc="40:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x40be7da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x40be6010"/>
        <function-ref name="getControl" scoped="" ref="0x40be60f0"/>
        <function-ref name="enableEvents" scoped="" ref="0x40be61d0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x40be62b0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x40be6390"/>
        <function-ref name="disableEvents" scoped="" ref="0x40be6470"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40be6550"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x40be6630"/>
        <function-ref name="setControl" scoped="" ref="0x40be6710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x40890698" loc="52:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x40890698"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4003add8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x40890870"/>
        <function-ref name="setEvent" scoped="" ref="0x40890950"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x40890a30"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x40890b10"/>
        <function-ref name="fired" scoped="" ref="0x40890bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x408798e8" loc="50:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x408798e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4003add8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40879ac0"/>
        <function-ref name="setClockSource" scoped="" ref="0x40879ba0"/>
        <function-ref name="enableEvents" scoped="" ref="0x40879c80"/>
        <function-ref name="get" scoped="" ref="0x40879d60"/>
        <function-ref name="disableEvents" scoped="" ref="0x40879e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40879f20"/>
        <function-ref name="getMode" scoped="" ref="0x40892018"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x408920f8"/>
        <function-ref name="overflow" scoped="" ref="0x408921d8"/>
        <function-ref name="setMode" scoped="" ref="0x408922b8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x40892398"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x40892890" loc="51:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x40892890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4003add8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x40892a68"/>
        <function-ref name="getControl" scoped="" ref="0x40892b48"/>
        <function-ref name="enableEvents" scoped="" ref="0x40892c28"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x40892d08"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x40892de8"/>
        <function-ref name="disableEvents" scoped="" ref="0x40892ec8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40890010"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x408900f0"/>
        <function-ref name="setControl" scoped="" ref="0x408901d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x40be1250" loc="49:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x40be1250"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x40be1428"/>
        <function-ref name="setEvent" scoped="" ref="0x40be1508"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x40be15e8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x40be16c8"/>
        <function-ref name="fired" scoped="" ref="0x40be17a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x40be3b38" loc="47:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x40be3b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40be3d10"/>
        <function-ref name="setClockSource" scoped="" ref="0x40be3df0"/>
        <function-ref name="enableEvents" scoped="" ref="0x40be3ed0"/>
        <function-ref name="get" scoped="" ref="0x40be2010"/>
        <function-ref name="disableEvents" scoped="" ref="0x40be20f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40be21d0"/>
        <function-ref name="getMode" scoped="" ref="0x40be22b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40be2390"/>
        <function-ref name="overflow" scoped="" ref="0x40be2470"/>
        <function-ref name="setMode" scoped="" ref="0x40be2550"/>
        <function-ref name="setInputDivider" scoped="" ref="0x40be2630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40be41d0" loc="46:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x40be41d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x405e9e40"/>
            <typename><typedef-ref name="T32khz" ref="0x40845048"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x401eb010"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40be3690"/>
        <function-ref name="fired" scoped="" ref="0x40be4e38"/>
        <function-ref name="startAt" scoped="" ref="0x40be3350"/>
        <function-ref name="isRunning" scoped="" ref="0x40be30d8"/>
        <function-ref name="getAlarm" scoped="" ref="0x40be3908"/>
        <function-ref name="start" scoped="" ref="0x40be4920"/>
        <function-ref name="stop" scoped="" ref="0x40be4bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40be5d30" loc="45:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x40be5d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40be5f08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x40be2790" loc="48:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x40be2790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x40be2968"/>
        <function-ref name="getControl" scoped="" ref="0x40be2a48"/>
        <function-ref name="enableEvents" scoped="" ref="0x40be2b28"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x40be2c08"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x40be2ce8"/>
        <function-ref name="disableEvents" scoped="" ref="0x40be2dc8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40be2ea8"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x40be1010"/>
        <function-ref name="setControl" scoped="" ref="0x40be10f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x408b9088" loc="43:../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x408b9088"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x405e9a00"/>
            <typename><typedef-ref name="TMilli" ref="0x405e9bc8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x401eb250"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x408b97d8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x408b9cc8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x408b9a50"/>
        <function-ref name="overflow" scoped="" ref="0x408b8010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x408b8c10" loc="43:../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x408b8c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x405e9e40"/>
            <typename><typedef-ref name="T32khz" ref="0x40845048"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x401eb010"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x408b3380"/>
        <function-ref name="clearOverflow" scoped="" ref="0x408b3870"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x408b35f8"/>
        <function-ref name="overflow" scoped="" ref="0x408b3ae8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x408b0730" loc="45:../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x408b0730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x408b0908"/>
        <function-ref name="setClockSource" scoped="" ref="0x408b09e8"/>
        <function-ref name="enableEvents" scoped="" ref="0x408b0ac8"/>
        <function-ref name="get" scoped="" ref="0x408b0ba8"/>
        <function-ref name="disableEvents" scoped="" ref="0x408b0c88"/>
        <function-ref name="clearOverflow" scoped="" ref="0x408b0d68"/>
        <function-ref name="getMode" scoped="" ref="0x408b0e48"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x408b0f28"/>
        <function-ref name="overflow" scoped="" ref="0x408c4018"/>
        <function-ref name="setMode" scoped="" ref="0x408c40f8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x408c41d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x408b1578" loc="44:../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x408b1578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x405e9e40"/>
            <typename><typedef-ref name="T32khz" ref="0x40845048"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x401eb010"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x408b1cc8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x408b0288"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x408b0010"/>
        <function-ref name="overflow" scoped="" ref="0x408b0500"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x408c25f8" loc="63:../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x408c25f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x405e9e40"/>
            <typename><typedef-ref name="T32khz" ref="0x40845048"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x401eb010"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x408c2d48"/>
        <function-ref name="clearOverflow" scoped="" ref="0x408ce288"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x408ce010"/>
        <function-ref name="overflow" scoped="" ref="0x408ce500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x408c3320" loc="62:../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x408c3320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x405e9a00"/>
            <typename><typedef-ref name="TMilli" ref="0x405e9bc8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x401eb250"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x408c3a70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x408c2010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x408c3ce8"/>
        <function-ref name="overflow" scoped="" ref="0x408c2288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40bf0358" loc="61:../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x40bf0358"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x405e9a00"/>
            <typename><typedef-ref name="TMilli" ref="0x405e9bc8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x401eb250"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40bef840"/>
        <function-ref name="fired" scoped="" ref="0x40bef010"/>
        <function-ref name="startAt" scoped="" ref="0x40bef500"/>
        <function-ref name="isRunning" scoped="" ref="0x40bef288"/>
        <function-ref name="getAlarm" scoped="" ref="0x40befab8"/>
        <function-ref name="start" scoped="" ref="0x40bf0aa8"/>
        <function-ref name="stop" scoped="" ref="0x40bf0d48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x40bec078" loc="73:../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x40bec078"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x405e9e40"/>
            <typename><typedef-ref name="T32khz" ref="0x40845048"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x401eb010"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40beb5c8"/>
        <function-ref name="fired" scoped="" ref="0x40becce0"/>
        <function-ref name="startAt" scoped="" ref="0x40beb288"/>
        <function-ref name="isRunning" scoped="" ref="0x40beb010"/>
        <function-ref name="getAlarm" scoped="" ref="0x40beb840"/>
        <function-ref name="start" scoped="" ref="0x40bec7c8"/>
        <function-ref name="stop" scoped="" ref="0x40beca68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40befe08" loc="68:../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x40befe08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x405e9a00"/>
            <typename><typedef-ref name="TMilli" ref="0x405e9bc8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x401eb250"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40bed570"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40beda60"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40bed7e8"/>
        <function-ref name="overflow" scoped="" ref="0x40bedcd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x409099a8" loc="74:../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x409099a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40909b80"/>
        <function-ref name="runTask" scoped="" ref="0x40909c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x4090a010" loc="49:../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x4090a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x405e9a00"/>
            <typename><typedef-ref name="TMilli" ref="0x405e9bc8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x401eb250"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x409094e0"/>
        <function-ref name="fired" scoped="" ref="0x4090ac78"/>
        <function-ref name="startAt" scoped="" ref="0x409091a0"/>
        <function-ref name="isRunning" scoped="" ref="0x4090aef0"/>
        <function-ref name="getAlarm" scoped="" ref="0x40909758"/>
        <function-ref name="start" scoped="" ref="0x4090a760"/>
        <function-ref name="stop" scoped="" ref="0x4090aa00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40904cb0" loc="48:../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x40904cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x405e9a00"/>
            <typename><typedef-ref name="TMilli" ref="0x405e9bc8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4090b7c0"/>
        <function-ref name="fired" scoped="" ref="0x4090ca40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4090b180"/>
        <function-ref name="isOneShot" scoped="" ref="0x4090cef0"/>
        <function-ref name="getdt" scoped="" ref="0x4090bc70"/>
        <function-ref name="gett0" scoped="" ref="0x4090ba18"/>
        <function-ref name="isRunning" scoped="" ref="0x4090cc98"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4090c2e8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4090b4a0"/>
        <function-ref name="startOneShot" scoped="" ref="0x4090c568"/>
        <function-ref name="stop" scoped="" ref="0x4090c7e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x40935560" loc="71:../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x40935560"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40935738"/>
        <function-ref name="runTask" scoped="" ref="0x40935818"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x40938338" loc="49:../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x40938338"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x405e9a00"/>
            <typename><typedef-ref name="TMilli" ref="0x405e9bc8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40936e38"/>
        <function-ref name="fired" scoped="" ref="0x409360f0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x409367f8"/>
        <function-ref name="isOneShot" scoped="" ref="0x409365a0"/>
        <function-ref name="getdt" scoped="" ref="0x40935310"/>
        <function-ref name="gett0" scoped="" ref="0x409350b8"/>
        <function-ref name="isRunning" scoped="" ref="0x40936348"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40938960"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40936b18"/>
        <function-ref name="startOneShot" scoped="" ref="0x40938be0"/>
        <function-ref name="stop" scoped="" ref="0x40938e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40906f00" loc="48:../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x40906f00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x405e9a00"/>
            <typename><typedef-ref name="TMilli" ref="0x405e9bc8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4003add8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40939b40"/>
        <function-ref name="fired" scoped="" ref="0x40923ce0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x409394e0"/>
        <function-ref name="isOneShot" scoped="" ref="0x40939278"/>
        <function-ref name="getdt" scoped="" ref="0x40938048"/>
        <function-ref name="gett0" scoped="" ref="0x40939da8"/>
        <function-ref name="isRunning" scoped="" ref="0x40939010"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40923558"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40939810"/>
        <function-ref name="startOneShot" scoped="" ref="0x409237e8"/>
        <function-ref name="stop" scoped="" ref="0x40923a78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40933940" loc="48:../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x40933940"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x405e9a00"/>
            <typename><typedef-ref name="TMilli" ref="0x405e9bc8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4094f010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x4094f360" loc="49:../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x4094f360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x405e9a00"/>
            <typename><typedef-ref name="TMilli" ref="0x405e9bc8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x401eb250"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4094fab0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40949010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4094fd28"/>
        <function-ref name="overflow" scoped="" ref="0x40949288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40946c00" loc="45:../../tos/system/TimerMilliC.nc">
      <component-ref qname="BootLedsAppC.LigarTimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x40946c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x405e9a00"/>
            <typename><typedef-ref name="TMilli" ref="0x405e9bc8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40944730"/>
        <function-ref name="fired" scoped="" ref="0x409459b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x409440f0"/>
        <function-ref name="isOneShot" scoped="" ref="0x40945e60"/>
        <function-ref name="getdt" scoped="" ref="0x40944be0"/>
        <function-ref name="gett0" scoped="" ref="0x40944988"/>
        <function-ref name="isRunning" scoped="" ref="0x40945c08"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40945258"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40944410"/>
        <function-ref name="startOneShot" scoped="" ref="0x409454d8"/>
        <function-ref name="stop" scoped="" ref="0x40945758"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40943ab8" loc="45:../../tos/system/TimerMilliC.nc">
      <component-ref qname="BootLedsAppC.LigarTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x40943ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x405e9a00"/>
            <typename><typedef-ref name="TMilli" ref="0x405e9bc8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4095e650"/>
        <function-ref name="fired" scoped="" ref="0x40942858"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4095e010"/>
        <function-ref name="isOneShot" scoped="" ref="0x40942d08"/>
        <function-ref name="getdt" scoped="" ref="0x4095eb00"/>
        <function-ref name="gett0" scoped="" ref="0x4095e8a8"/>
        <function-ref name="isRunning" scoped="" ref="0x40942ab0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40942100"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4095e330"/>
        <function-ref name="startOneShot" scoped="" ref="0x40942380"/>
        <function-ref name="stop" scoped="" ref="0x40942600"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Leds" loc="51:../../tos/interfaces/Leds.nc">
      <documentation loc="33:../../tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x405f6038" loc="61:../../tos/interfaces/Leds.nc">
        <documentation loc="58:../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x405f6480" loc="67:../../tos/interfaces/Leds.nc">
        <documentation loc="63:../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x405f6900" loc="72:../../tos/interfaces/Leds.nc">
        <documentation loc="69:../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x405f41a8" loc="83:../../tos/interfaces/Leds.nc">
        <documentation loc="79:../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x405f4e98" loc="100:../../tos/interfaces/Leds.nc">
        <documentation loc="96:../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x405f3390" loc="117:../../tos/interfaces/Leds.nc">
        <documentation loc="103:../../tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4003add8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x405f6d28" loc="77:../../tos/interfaces/Leds.nc">
        <documentation loc="74:../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x405f3ad0" loc="134:../../tos/interfaces/Leds.nc">
        <documentation loc="120:../../tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003add8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x405f3978" loc="134:../../tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003add8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x405f7bf0" loc="56:../../tos/interfaces/Leds.nc">
        <documentation loc="53:../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x405f4628" loc="89:../../tos/interfaces/Leds.nc">
        <documentation loc="86:../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x405f4a50" loc="94:../../tos/interfaces/Leds.nc">
        <documentation loc="91:../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:../../tos/interfaces/GeneralIO.nc">
      <documentation loc="34:../../tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x405ffee0" loc="44:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x405fd2e8" loc="45:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4035ae80"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x405ff750" loc="42:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x405fdab8" loc="47:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4035ae80"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x405ffb10" loc="43:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4035ae80"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x405fd6c0" loc="46:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x405ff010" loc="40:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x405ff3a0" loc="41:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="51:../../tos/interfaces/Init.nc">
      <documentation loc="34:../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x405f17c0" loc="62:../../tos/interfaces/Init.nc">
        <documentation loc="53:../../tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40363da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="43:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x4061b138" loc="78:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="75:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
          <long>&#10; Set pin direction to input.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x4061b560" loc="80:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4035ae80"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x406184e8" loc="110:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="103:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40363da0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003add8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x40618390" loc="110:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003add8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x4060a3e8" loc="58:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="55:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x4061bd80" loc="87:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4035ae80"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x40618a78" loc="117:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="112:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4003add8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x4061b948" loc="85:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
          <long>&#10; Set pin direction to output.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x4060acb0" loc="73:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="68:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4035ae80"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x4061aa48" loc="99:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="96:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x4060a808" loc="66:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="60:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4003add8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x4060fb88" loc="48:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="45:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x4061a1c8" loc="92:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="89:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
          <long>&#10; Set pin for module specific functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x4061ae90" loc="101:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4035ae80"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x4061a648" loc="94:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4035ae80"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x4060a010" loc="53:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="50:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x4071a1a8" loc="48:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x4071c138" loc="43:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x4071cd80" loc="47:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x40709d70" loc="42:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x4071c580" loc="45:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x40709600" loc="40:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x407099b8" loc="41:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x4071c980" loc="46:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:../../tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:../../tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x405e3548" loc="62:../../tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:../../tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x403cec40"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x407448b8" loc="55:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="49:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; Msp430Timer.h has convenience definitions:&#10; MSP430TIMER_CM_NONE, MSP430TIMER_CM_RISING, MSP430TIMER_CM_FALLING, MSP430TIMER_CM_BOTH&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003add8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x40744760" loc="55:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003add8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x40745010" loc="42:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40716d48"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x40715308"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x40744de0" loc="57:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x40743638" loc="59:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4035ae80"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x40744310" loc="47:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x407431f0" loc="58:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x40745468" loc="43:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4035ae80"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x407458b0" loc="44:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x40745ed0" loc="46:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40716d48"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x40715308"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x40745d78" loc="46:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40716d48"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x40715308"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="39:../../tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x40752418" loc="44:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="41:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x401eb010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x40751ab0" loc="79:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="70:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4035ae80"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x40751958" loc="79:../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4035ae80"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x40750210" loc="86:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="81:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x401eb010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x407500b8" loc="86:../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x401eb010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x407514b0" loc="68:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="65:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x40751010" loc="63:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="58:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4035ae80"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x40752980" loc="56:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="46:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003add8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x40752828" loc="56:../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4003add8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="38:../../tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x407400c8" loc="40:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x401eb010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x40740620" loc="41:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x401eb010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x407404c8" loc="41:../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x401eb010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x40740bd0" loc="42:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x401eb010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x40740a78" loc="42:../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x401eb010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x40754188" loc="43:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x401eb010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x40754030" loc="43:../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x401eb010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x40754530" loc="45:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:../../tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x40749600" loc="52:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x407483e0" loc="55:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x401eb010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x40748288" loc="55:../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x401eb010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x407499f0" loc="53:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x4071dd78" loc="45:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x401eb010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x40749de8" loc="54:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x4074a5d0" loc="47:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x40749258" loc="51:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x4074a1d8" loc="46:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4035ae80"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x4074a998" loc="48:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x4074ae88" loc="50:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x4074ad30" loc="50:../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x407489c8" loc="56:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x401eb010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x40748870" loc="56:../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x401eb010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x407680f8" loc="39:../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:../../tos/interfaces/McuSleep.nc">
      <documentation loc="63:../../tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x405cc038" loc="76:../../tos/interfaces/McuSleep.nc">
        <documentation loc="75:../../tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:../../tos/interfaces/McuPowerState.nc">
      <documentation loc="35:../../tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x40551508" loc="52:../../tos/interfaces/McuPowerState.nc">
        <documentation loc="47:../../tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:../../tos/interfaces/Boot.nc">
      <documentation loc="42:../../tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x40835728" loc="60:../../tos/interfaces/Boot.nc">
        <documentation loc="51:../../tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:../../tos/interfaces/Scheduler.nc">
      <documentation loc="42:../../tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x40034a50" loc="57:../../tos/interfaces/Scheduler.nc">
        <documentation loc="54:../../tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x4035d3b0" loc="72:../../tos/interfaces/Scheduler.nc">
        <documentation loc="67:../../tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x40034e90" loc="65:../../tos/interfaces/Scheduler.nc">
        <documentation loc="59:../../tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4035ae80"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:../../tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x4036a2d0" loc="67:../../tos/interfaces/TaskBasic.nc">
        <documentation loc="57:../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40363da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x4036a7e8" loc="75:../../tos/interfaces/TaskBasic.nc">
        <documentation loc="69:../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:../../tos/lib/timer/Timer.nc">
      <documentation loc="36:../../tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40843be0" loc="53:../../tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40843be0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x40857520" loc="136:../../tos/lib/timer/Timer.nc">
        <documentation loc="132:../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x401eb250"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x408591a8" loc="83:../../tos/lib/timer/Timer.nc">
        <documentation loc="80:../../tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x40858358" loc="114:../../tos/lib/timer/Timer.nc">
        <documentation loc="100:../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x401eb250"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x401eb250"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x40858010" loc="114:../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x401eb250"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x408581f8" loc="114:../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x401eb250"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x40859af8" loc="98:../../tos/lib/timer/Timer.nc">
        <documentation loc="94:../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4035ae80"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x40857e98" loc="151:../../tos/lib/timer/Timer.nc">
        <documentation loc="146:../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x401eb250"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x40857968" loc="144:../../tos/lib/timer/Timer.nc">
        <documentation loc="138:../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x401eb250"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x40859638" loc="92:../../tos/lib/timer/Timer.nc">
        <documentation loc="86:../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4035ae80"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x4085a270" loc="64:../../tos/lib/timer/Timer.nc">
        <documentation loc="56:../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x401eb250"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x4085a118" loc="64:../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x401eb250"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x40858d40" loc="129:../../tos/lib/timer/Timer.nc">
        <documentation loc="116:../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x401eb250"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x401eb250"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x408589f8" loc="129:../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x401eb250"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x40858be0" loc="129:../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x401eb250"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x4085a908" loc="73:../../tos/lib/timer/Timer.nc">
        <documentation loc="66:../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x401eb250"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x4085a7b0" loc="73:../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x401eb250"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x4085add8" loc="78:../../tos/lib/timer/Timer.nc">
        <documentation loc="75:../../tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:../../tos/lib/timer/LocalTime.nc">
      <documentation loc="36:../../tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x408715c8" loc="53:../../tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x408715c8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x40871aa8" loc="61:../../tos/lib/timer/LocalTime.nc">
        <documentation loc="55:../../tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x401eb250"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:../../tos/lib/timer/Alarm.nc">
      <documentation loc="36:../../tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x4086d6d8" loc="56:../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4086d6d8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x4086d840" loc="56:../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4086d840"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x40884b68" loc="109:../../tos/lib/timer/Alarm.nc">
        <documentation loc="105:../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4086d840"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x40869830" loc="78:../../tos/lib/timer/Alarm.nc">
        <documentation loc="75:../../tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x40884520" loc="103:../../tos/lib/timer/Alarm.nc">
        <documentation loc="90:../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4086d840"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4086d840"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x408841d0" loc="103:../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4086d840"/></type-var>
          </variable>
          <variable name="dt" ref="0x408843c0" loc="103:../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4086d840"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x40869c78" loc="88:../../tos/lib/timer/Alarm.nc">
        <documentation loc="81:../../tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4035ae80"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x40883010" loc="116:../../tos/lib/timer/Alarm.nc">
        <documentation loc="111:../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4086d840"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x4086de70" loc="66:../../tos/lib/timer/Alarm.nc">
        <documentation loc="59:../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4086d840"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x4086dd18" loc="66:../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4086d840"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x408693d0" loc="73:../../tos/lib/timer/Alarm.nc">
        <documentation loc="68:../../tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:../../tos/lib/timer/Counter.nc">
      <documentation loc="36:../../tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x408ba7e8" loc="57:../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x408ba7e8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x408ba950" loc="57:../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x408ba950"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x408bae38" loc="64:../../tos/lib/timer/Counter.nc">
        <documentation loc="59:../../tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x408ba950"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x408b7890" loc="76:../../tos/lib/timer/Counter.nc">
        <documentation loc="73:../../tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x408b7390" loc="71:../../tos/lib/timer/Counter.nc">
        <documentation loc="66:../../tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4035ae80"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x408b7c90" loc="82:../../tos/lib/timer/Counter.nc">
        <documentation loc="78:../../tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
